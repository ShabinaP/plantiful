[{"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/index.js":"1","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/App.js":"2","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/List/List.js":"3","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/LoginForm.js":"4","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/RegisterForm.js":"5","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Dashboard.js":"6","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/PlantPage.js":"7","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Navbar.js":"8","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Footer.js":"9","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/DataContext.js":"10","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Home.js":"11","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Alert.js":"12","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/plantbyname.js":"13","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/register.js":"14","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Pagination/Pagination.js":"15","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/ApiServices.js":"16","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/userRegistration.js":"17","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/UserContext.js":"18"},{"size":407,"mtime":1639689107451,"results":"19","hashOfConfig":"20"},{"size":2277,"mtime":1639689372226,"results":"21","hashOfConfig":"20"},{"size":3637,"mtime":1639755952633,"results":"22","hashOfConfig":"20"},{"size":2164,"mtime":1639602290855,"results":"23","hashOfConfig":"20"},{"size":3052,"mtime":1639597305571,"results":"24","hashOfConfig":"20"},{"size":142,"mtime":1639474823513,"results":"25","hashOfConfig":"20"},{"size":2632,"mtime":1639474823465,"results":"26","hashOfConfig":"20"},{"size":1003,"mtime":1639474823465,"results":"27","hashOfConfig":"20"},{"size":2152,"mtime":1639474823461,"results":"28","hashOfConfig":"20"},{"size":2433,"mtime":1639753565004,"results":"29","hashOfConfig":"20"},{"size":4663,"mtime":1639474823461,"results":"30","hashOfConfig":"20"},{"size":399,"mtime":1638479728070,"results":"31","hashOfConfig":"20"},{"size":285,"mtime":1639474823465,"results":"32","hashOfConfig":"20"},{"size":622,"mtime":1639474823465,"results":"33","hashOfConfig":"20"},{"size":880,"mtime":1638619147738,"results":"34","hashOfConfig":"20"},{"size":2589,"mtime":1639756152954,"results":"35","hashOfConfig":"20"},{"size":1057,"mtime":1639597314636,"results":"36","hashOfConfig":"20"},{"size":1724,"mtime":1639749651943,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1wxjva5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/index.js",[],["81","82"],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/App.js",["83"],"\nimport RegisterForm from \"./components/RegisterForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport PlantsList from \"./components/List/List\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigationbar from \"./components/Navbar\";\nimport PlantPage from \"./components/PlantPage\";\nimport Dashboard from \"./components/Dashboard\";\nimport Home from \"./components/Home\";\nimport Footer from \"./components/Footer\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport { DataContextProvider } from \"./dataContext/DataContext\";\nimport { UserRegContextProvider } from \"./dataContext/userRegistration\";\nimport { UserContextProvider } from \"./dataContext/UserContext\";\nimport {UserContext} from './dataContext/UserContext'\nimport { useContext, useEffect } from 'react';\n\nfunction App() {\n\n  const {   userGloblaState,   setUserGlobalState}= useContext(UserContext)\nconsole.log(userGloblaState)\n  useEffect (()=>{\n    const token= JSON.parse(window.localStorage.getItem(\"token\"))\n    if(token) {\n      setUserGlobalState ({\n        ...userGloblaState,\n        token:token\n      })\n\n    }\n  },[])\n\n  return (\n\n    <DataContextProvider>\n      <UserRegContextProvider>\n        <UserContextProvider>\n      <div className=\"App\">\n        <Container fluid=\"true\" className={\"no-gutters mx-0 px-0\"}>\n          <Router>\n            <Navigationbar fluid className={\"no-gutters mx-0 px-0\"}/>\n            <Routes>\n              <Route path=\"/\" element={<Home />}></Route>{\" \"}\n              <Route path=\"/registerform\" element={<RegisterForm />}></Route>{\" \"}\n              <Route path=\"/loginform\" element={<LoginForm />}></Route>{\" \"}\n              <Route path=\"/plants\" element={<PlantsList />}></Route>\n              <Route path=\"/plants/plantname/:latinname\" element={<PlantPage/>}></Route>{\" \"}\n              <Route path=\"/dashboard\" element={<Dashboard/>}></Route>\n            </Routes>{\" \"}\n          </Router>{\" \"}\n\t\t  <div className=\"page_container\">\n\t\t\t\t<div classname=\"content_wrap\">\n\t\t\t<Footer />\n\t\t\t</div>\n\t\t\t</div>\n\t\n        </Container>{\" \"}\n      </div>{\" \"}\n      </UserContextProvider>\n      </UserRegContextProvider>\n    </DataContextProvider>\n  );\n}\n\nexport default App;\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/List/List.js",["84"],"import { Plus, Heart, ArrowRight } from \"phosphor-react\";\nimport React, { useEffect, useContext } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport \"./list.css\";\nimport { DataContext } from \"../../dataContext/DataContext\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../Pagination/Pagination\";\nimport ApiCalls from \"../../dataContext/ApiServices\";\n\nfunction List() {\n  const { plants, setPlants } = useContext(DataContext);\n  useEffect(() => {\n    ApiCalls.getAllPlants(setPlants);\n  }, []);\n\n  return (\n    <>\n      <Container\n        fluid\n        style={{\n          backgroundColor: \"#F9F5F1\",\n        }}\n      >\n        <section className=\"panel\">\n          <header className=\"panel-heading\"> </header>{\" \"}\n          <div className=\"panel-body\">\n            <div className=\"row p-3\">\n              <div className=\"col-12\">\n                <div className=\"input-group \">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search for a plant..\"\n                    className=\"w-50 search_input\"\n                  />\n                  <Button\n                    type=\"submit\"\n                    id=\"submit\"\n                    style={{\n                      backgroundColor: \"#55A356\",\n                      border: \"#013606\",\n                      margin: \"8px\",\n                      overflow: \"hidden\",\n                    }}\n                  >\n                    Go! <ArrowRight size={20} />{\" \"}\n                  </Button>{\" \"}\n                </div>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <table className=\"table table-hover p-table\">\n            <thead className=\"p_titles\">\n              <tr>\n                <th> Plant Name </th> <th> Image </th> <th> Origin </th>{\" \"}\n                <th> Watering needs </th> <th> Temperature </th> <th> Like </th>{\" \"}\n                <th> Add </th>{\" \"}\n              </tr>{\" \"}\n            </thead>{\" \"}\n            <tbody>\n              {plants &&\n                plants.map((plant) => (\n                  <>\n                    <div className=\"user\"> </div>{\" \"}\n                    <tr>\n                      <td className=\"p-name\">\n                        <Link to={`plantname/${plant.latinName}`}>\n                          {\" \"}\n                          {plant.familyName}{\" \"}\n                        </Link>\n\n                        <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <a href=\"plant\"> {plant.familyName} </a> <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <small> {plant.origin} </small>{\" \"}\n                      </td>\n                      <td className=\"p-name\">\n                        <small> {plant.watering} </small>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <span className=\"label label-danger\">\n                          {\" \"}\n                          {plant.temperature} & deg; <sup> c </sup>{\" \"}\n                        </span>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <Heart size={30} weight=\"bold\" className=\"m-4\" />\n                      </td>{\" \"}\n                      <td>\n                        <Plus size={20} weight=\"bold\" />\n                      </td>{\" \"}\n                    </tr>\n                  </>\n                ))}{\" \"}\n            </tbody>{\" \"}\n          </table>{\" \"}\n        </section>{\" \"}\n      </Container>\n\n      <Pagination />\n    </>\n  );\n}\n\nexport default List;\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/LoginForm.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/RegisterForm.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Dashboard.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/PlantPage.js",["85","86","87"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { ArrowRight } from \"phosphor-react\";\nimport { useParams } from \"react-router-dom\";\nimport dummyPlant from \"../assets/dummyPlant.png\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"../styles/PlantPage.css\";\nimport getPlantByName from '../dataContext/plantbyname'\nconst { DataContext } = require(\"../dataContext/DataContext\")\n\n\nconst PlantPage = () => {\n// const { plants, plantByName, setPlantByName } = useContext(DataContext)\nconst [plantByName, setPlantByName] = useState([]);\n\tconst settings = {\n\t\tdots: true,\n\t\tlazyLoad: true,\n\t\tinfinite: true,\n\t\tspeed: 500,\n\t\tslidesToShow: 1,\n\t\tslidesToScroll: 1,\n\t\tinitialSlide: 2,\n\t};\n\n\tconst { latinname } = useParams();\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`/plants/plantname/${latinname}`)\n\n\t\t\t.then((response) => {\n\t\t\t\tsetPlantByName(response.data[0]);\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t}, [latinname]);\n\n\n\treturn (\n\t\t<>\n\t\t<div className='wrapper'>\n\n\t\t\t<Container >\n\t\t\t<div className=\"title_border\">\n\t\t\t\t<h2 className='plant_title'> {plantByName.familyName} </h2>\n\t\t\t\t</div>\n\t\t\t\t<Slider {...settings}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t</Slider>\n\n\t\t\t\t<div className='plant_info'>\n\t\t\t\t\t\t<p className='plant_information_latinname'>\n                    <span className=\"plant_info_title\">Latin name:</span> {plantByName.latinName}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_origin'>\n\t\t\t\t\t\t<span className=\"plant_info_title\">Origin:</span> {plantByName.origin}\n\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_wateringneeds'>\n\t\t\t\t\t<span className=\"plant_info_title\">\tWatering Needs:</span> {plantByName.watering}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_temperature'>\n                    <span className=\"plant_info_title\">Temperature:</span> {plantByName.temperature}&deg;<sup>c</sup>\n\t\t\t\t\t</p>\n\t\t\t\t\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tid='submit'\n                        className=\"add_button\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: \"#55A356\",\n\t\t\t\t\t\t\tborder: \"#013606\",\n\t\t\t\t\t\t\tmargin: \"8px\",\n\t\t\t\t\t\t\tpadding: \"10px\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\nAdd to dashboard <ArrowRight size={20} />\n\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default PlantPage;\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Navbar.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Footer.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/DataContext.js",["88","89","90"],"import { useState, useEffect, createContext } from \"react\";\nimport registerUSer from '../dataContext/register'\nimport { useParams } from \"react-router-dom\";\nimport getPlantByName from './plantbyname'\nimport   ApiServices from './ApiServices';\n\nexport const DataContext = createContext();\n\nexport const DataContextProvider = (props) => {\n    // user registeration\n    const plantiful = \"plantiful\"\n    const [path, setPath] = useState()\n    const [message, setMessage] = useState(false);\n    const initialState = {\n      fields: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      loginFields: {\n        email: \"\",\n        password: \"\",\n      },\n      alert: {\n        message: \"\",\n        isSuccess: false,\n      },\n\n    };\n      const [fields, setFields] = useState(initialState.fields);\n  \n \n    const [plants, setPlants] = useState([])\n    const [plantByName, setPlantByName] = useState([]);\n    const [searchTerm, setSearchTerm] = useState()\n    \n    const handleFieldChange = (event) => {\n      event.preventDefault();\n      setFields((prev) => ({\n        ...prev,\n        [event.target.name]: event.target.value,\n      }));\n    };\n    \n  \n  \n    const handleSubmit =(e)=>{\n        e.preventDefault()\n         ApiServices.userRegister(fields, setMessage)\n        }\n\n      const handleEnter = (event) => {\n        if (event.key === \"Enter\") {\n          // return handlePlantSearch();\n        }\n      };\n      const handleInputChange = (event) => setSearchTerm(event.target.value);\n \n  // const handlePlantSearch = () => {\n  //   getForecast(searchText, setSelectedDate, setForecasts, setLocation);\n  //   setSearchText(\"\");\n  // };\n const { latinname } = useParams();\n\nuseEffect(()=>{\n  // ApiServices.getAllPlants(setPlants)\n  getPlantByName(setPlantByName, path)\n},[])\n\n\n      const value = {\n        fields,\n\n        setFields,\n\n        message,\n        setMessage,\n        handleFieldChange,\n        handleSubmit,\n        plants,\n        setPlants,\n        plantByName,\n        setPlantByName,\n        searchTerm,\n        setSearchTerm,\n        setPath,\n        handleEnter,\n        getPlantByName,\n        plantiful,\n        handleInputChange,\n        ApiServices,\n        // loginField, \n        // setLoginField,\n\n        alert\n        // handlePlantSearch\n      };\n   \n\n  return (\n    <DataContext.Provider value={value}>{props.children}</DataContext.Provider>\n  );\n};\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Home.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Alert.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/plantbyname.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/register.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Pagination/Pagination.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/ApiServices.js",["91"],"import axios from \"axios\";\n\n\nconst ApiCalls = {\n\n    \n\n    getAllPlants: async (setPlants) => {\n        let endpoint = '/plants';\n        const response = await axios.get(endpoint)\n        const data = await response.data\n        setPlants(data)\n\n\n    },\n    getPlantByName: async (setPlantByName, latinname) => {\n        let endpoint = `/plants/plantname/${latinname}`\n        const response = await axios.get(endpoint)\n        const data = await response.data[0]\n        setPlantByName(data)\n\n    },\n    searchPlant: async (searchTerm) => {\n\n        let endpoint = '/plant';\n        if (searchTerm) {\n            endpoint = searchTerm + {\n                searchTerm\n            }\n        }\n        const response = await axios.get(endpoint)\n        const data = await response.data\n\n    },\n    userRegister: async (fields, setMessage) => {\n        try {\n            const response = await axios.post(\"/auth/register\", {\n                name: fields.name,\n                email: fields.email,\n                password: fields.password,\n\n            })\n            response.data && window.location.replace(\"/loginForm\");\n\n\n\n            //    const data = await response\n            console.log(response.data)\n            await setMessage(`Form has been submited sucessfully`)\n        } catch (error) {\n\n\n            setMessage(`Failed to submit form`)\n        }\n\n\n    },\n    userLogin: async (loginField, setUser, setIsLoggedIn, userGloblaState,\n        setUserGlobalState) => {\n        try {\n\n            const response = await axios.post('/auth/login', {\n                email: loginField.email,\n                password: loginField.password\n            },\n            )\n            \n\n\n\n            console.log(response.data.others._id)\n            response && localStorage.setItem(\"token\", JSON.stringify(response.data.token))\n            response && localStorage.setItem(\"userDetails\", JSON.stringify(response.data.others))\n            response && localStorage.setItem(\"userPlants\", JSON.stringify(response.data.others.userPlants))\n            response && setIsLoggedIn(true)\n            await setUserGlobalState({\n                ...userGloblaState,\n                userDetails:response.data.others,\n                token:response.data.token,\n                userId: response.data.others,\n                userPlants:response.data.userPlants\n\n            })\n            response && setUser(response.data.userPlants)\n            // response && window.location.replace(\"/dashboard\")\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n\n\n\n}\n\nexport default ApiCalls","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/userRegistration.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/UserContext.js",["92","93","94"],"import { useState, useEffect, createContext } from \"react\";\nimport ApiServices from \"./ApiServices\";\nexport const UserContext = createContext();\n\nexport const UserContextProvider = (props) => {\n  const initialState = {\n    loginFields: {\n      email: \"\",\n      password: \"\",\n    },\n    alert: {\n      message: \"\",\n      isSuccess: false,\n    },\n  };\n  const LocalToken = localStorage.getItem(\"token\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [alert, setAlert] = useState(initialState.alert);\n  const [loginField, setLoginField] = useState(initialState.loginFields);\n  const [token, setToken] = useState(LocalToken);\n  const [userGloblaState, setUserGlobalState] = useState({\n    userDetails:null,\n    token:null,\n    userId: null,\n    userPlants:null\n  });\n\n\n    const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n    setAlert({ message: \"\", isSuccess: false });\n    ApiServices.userLogin(\n      loginField,\n      setUser,\n      setIsLoggedIn,\n      userGloblaState,\n      setUserGlobalState\n    );\n  };\n\n\n  \n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n\n    setLoginField((prev) => ({\n      ...prev,\n      // eslint-disable-next-line no-restricted-globals\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const values = {\n    token,\n    isLoggedIn,\n    user,\n    loginField,\n    handleLogin,\n    handleLoginInputChange,\n    alert,\n    setIsLoggedIn,\n    setUser,\n    userGloblaState,\n    setUserGlobalState\n  };\n\n  return (\n    <UserContext.Provider value={values}>\n      {\" \"}\n      {props.children}{\" \"}\n    </UserContext.Provider>\n  );\n};\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":33,"column":5,"nodeType":"101","endLine":33,"endColumn":7,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":14,"column":6,"nodeType":"101","endLine":14,"endColumn":8,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":38,"nodeType":"107","messageId":"108","endLine":1,"endColumn":48},{"ruleId":"105","severity":1,"message":"109","line":11,"column":8,"nodeType":"107","messageId":"108","endLine":11,"endColumn":22},{"ruleId":"105","severity":1,"message":"110","line":12,"column":9,"nodeType":"107","messageId":"108","endLine":12,"endColumn":20},{"ruleId":"105","severity":1,"message":"111","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":20},{"ruleId":"105","severity":1,"message":"112","line":64,"column":10,"nodeType":"107","messageId":"108","endLine":64,"endColumn":19},{"ruleId":"99","severity":1,"message":"113","line":69,"column":3,"nodeType":"101","endLine":69,"endColumn":5,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"115","line":32,"column":15,"nodeType":"107","messageId":"108","endLine":32,"endColumn":19},{"ruleId":"105","severity":1,"message":"116","line":1,"column":20,"nodeType":"107","messageId":"108","endLine":1,"endColumn":29},{"ruleId":"105","severity":1,"message":"117","line":18,"column":10,"nodeType":"107","messageId":"108","endLine":18,"endColumn":17},{"ruleId":"105","severity":1,"message":"118","line":22,"column":17,"nodeType":"107","messageId":"108","endLine":22,"endColumn":25},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setUserGlobalState' and 'userGloblaState'. Either include them or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has a missing dependency: 'setPlants'. Either include it or remove the dependency array.",["122"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'getPlantByName' is defined but never used.","'DataContext' is assigned a value but never used.","'registerUSer' is defined but never used.","'latinname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.",["123"],"'data' is assigned a value but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'setToken' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [setUserGlobalState, userGloblaState]",{"range":"130","text":"131"},"Update the dependencies array to be: [setPlants]",{"range":"132","text":"133"},"Update the dependencies array to be: [path]",{"range":"134","text":"135"},[1189,1191],"[setUserGlobalState, userGloblaState]",[532,534],"[setPlants]",[1823,1825],"[path]"]