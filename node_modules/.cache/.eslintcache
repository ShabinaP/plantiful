[{"/Users/shabinapatel/Desktop/projects/plantiful/src/index.js":"1","/Users/shabinapatel/Desktop/projects/plantiful/src/App.js":"2","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/UserContext.js":"3","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/DataContext.js":"4","/Users/shabinapatel/Desktop/projects/plantiful/src/components/PlantPage.js":"5","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Navbar.js":"6","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Footer.js":"7","/Users/shabinapatel/Desktop/projects/plantiful/src/components/ErrorPage.js":"8","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/userRegistration.js":"9","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Home.js":"10","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Dashboard.js":"11","/Users/shabinapatel/Desktop/projects/plantiful/src/components/RegisterForm.js":"12","/Users/shabinapatel/Desktop/projects/plantiful/src/components/List/List.js":"13","/Users/shabinapatel/Desktop/projects/plantiful/src/components/LoginForm.js":"14","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/ApiServices.js":"15","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/plantbyname.js":"16","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Alert.js":"17","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Pagination/Pagination.js":"18","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/register.js":"19","/Users/shabinapatel/Desktop/projects/plantiful/src/components/PrivateRoutes.js":"20","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/PlantConetx.js":"21"},{"size":534,"mtime":1640020547831,"results":"22","hashOfConfig":"23"},{"size":3709,"mtime":1640518214772,"results":"24","hashOfConfig":"23"},{"size":1941,"mtime":1640262907329,"results":"25","hashOfConfig":"23"},{"size":2424,"mtime":1640020758723,"results":"26","hashOfConfig":"23"},{"size":3682,"mtime":1640522996775,"results":"27","hashOfConfig":"23"},{"size":1863,"mtime":1640518214783,"results":"28","hashOfConfig":"23"},{"size":2146,"mtime":1640285155928,"results":"29","hashOfConfig":"23"},{"size":153,"mtime":1640020371469,"results":"30","hashOfConfig":"23"},{"size":1057,"mtime":1639769969438,"results":"31","hashOfConfig":"23"},{"size":4951,"mtime":1640383668558,"results":"32","hashOfConfig":"23"},{"size":7066,"mtime":1640543258728,"results":"33","hashOfConfig":"23"},{"size":3281,"mtime":1640384908322,"results":"34","hashOfConfig":"23"},{"size":4887,"mtime":1640518214777,"results":"35","hashOfConfig":"23"},{"size":2335,"mtime":1640384766277,"results":"36","hashOfConfig":"23"},{"size":4822,"mtime":1640541406583,"results":"37","hashOfConfig":"23"},{"size":285,"mtime":1639238225468,"results":"38","hashOfConfig":"23"},{"size":428,"mtime":1640020547805,"results":"39","hashOfConfig":"23"},{"size":880,"mtime":1638628304158,"results":"40","hashOfConfig":"23"},{"size":719,"mtime":1639511673253,"results":"41","hashOfConfig":"23"},{"size":460,"mtime":1640379933323,"results":"42","hashOfConfig":"23"},{"size":1034,"mtime":1640518214802,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"98p4ih",{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},"/Users/shabinapatel/Desktop/projects/plantiful/src/index.js",[],["96","97"],"/Users/shabinapatel/Desktop/projects/plantiful/src/App.js",["98","99","100","101","102","103","104","105","106"],"import RegisterForm from \"./components/RegisterForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport PlantsList from \"./components/List/List\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigationbar from \"./components/Navbar\";\nimport PlantPage from \"./components/PlantPage\";\nimport Dashboard from \"./components/Dashboard\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport PrivateRoute from \"./components/PrivateRoutes\";\nimport Home from \"./components/Home\";\nimport Footer from \"./components/Footer\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport { DataContextProvider } from \"./dataContext/DataContext\";\nimport { UserRegContextProvider } from \"./dataContext/userRegistration\";\nimport { UserContextProvider } from \"./dataContext/UserContext\";\nimport { PlantContextProvider } from \"./dataContext/PlantConetx\";\n\nimport { UserContext } from \"./dataContext/UserContext\";\nimport { useContext, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { DataContext } from \"./dataContext/DataContext\";\nimport ApiCalls from \"./dataContext/ApiServices\";\nfunction App() {\n\tconst loggedInUSerId= JSON.parse(localStorage.getItem('userId'))\n\n\tconst Secret = process.env.REACT_APP_JWT_SECRET;\n\tconsole.log(Secret);\n\tconst {\n\t\tuserGlobalState,\n\t\tsetPlantMatch,\n\t\tplants,\n\t\tsetPlants,\n\t\tsetUserGlobalState,\n\t} = useContext(UserContext);\n\n\t// console.log(plants)\n\t//   useEffect(() => {\n\t//     setPlantMatch(plants)\n\t//    const token = JSON.parse(window.localStorage.getItem(\"token\"));\n\n\t//     const decodedUser = jwt.verify(token, \"secret\");\n\t//       if (token) {\n\t//       setUserGlobalState({\n\t//         ...decodedUser,\n\n\t//       });\n\t//     };\n\t//      console.log(userGlobalState)\n\t//   }, []);\n\n\t//   // const {   userGlobalState,   setUserGlobalState}= useContext(UserContext)\n\t// console.log(userGlobalState)\n\t//   // useEffect (()=>{\n\t//   const token= JSON.parse(window.localStorage.getItem(\"token\"))\n\t//   if (token) {\n\t//     setUserGlobalState ({\n\t//       ...userGlobalState,\n\t//       token:token,\n\t//     })}\n\n\t// //     if (!token) {\n\t// //  setUserGlobalState({\n\t// //       ...userGlobalState\n\n\t// //     })\n\n\t//   else {\n\t//   const decodedUser = jwt.verify(token, \"secret\");\n\t//   setUserGlobalState({\n\t//     ...decodedUser\n\t//   })\n\n\t//   }\n\t// }, []);\n\n\treturn (\n\t\t<DataContextProvider>\n\t\t\t<UserRegContextProvider>\n\t\t\t\t<UserContextProvider>\n\t\t\t\t\t<PlantContextProvider > \n\t\t\t\t\t<div className='App'>\n\t\t\t\t\t\t<Container fluid='true' className={\"no-gutters mx-0 px-0\"}>\n\t\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t\t<Navigationbar fluid className={\"no-gutters mx-0 px-0\"} />\n\t\t\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t\t\t<Route path='/' element={<Home />}></Route>{\" \"}\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath='/auth/register'\n\t\t\t\t\t\t\t\t\t\telement={<RegisterForm />}\n\t\t\t\t\t\t\t\t\t></Route>{\" \"}\n\t\t\t\t\t\t\t\t\t<Route path='/auth/login' element={<LoginForm />}></Route>{\" \"}\n\t\t\t\t\t\t\t\t\t<Route path='/plants' element={<PlantsList />}></Route>\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath='/plants/:id'\n\t\t\t\t\t\t\t\t\t\telement={<PlantPage />}\n\t\t\t\t\t\t\t\t\t></Route>{\" \"}\n\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath={`/users/${loggedInUSerId}`}\n\t\t\t\t\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t\t\t\t<PrivateRoute>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dashboard />\n\t\t\t\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Route path='*' element={<ErrorPage />}></Route>\n\t\t\t\t\t\t\t\t</Routes>{\" \"}\n\t\t\t\t\t\t\t</Router>{\" \"}\n\t\t\t\t\t\t\t<div className='page_container'>\n\t\t\t\t\t\t\t\t<div classname='content_wrap'>\n\t\t\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Container>{\" \"}\n\t\t\t\t\t</div>{\" \"}\n\t\t\t\t\t</PlantContextProvider>\n\t\t\t\t</UserContextProvider>\n\t\t\t</UserRegContextProvider>\n\t\t</DataContextProvider>\n\t);\n}\n\nexport default App;\n","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/UserContext.js",["107","108"],"import { useState, useEffect, createContext } from \"react\";\nimport ApiServices from \"./ApiServices\";\nexport const UserContext = createContext();\n\nexport const UserContextProvider = (props) => {\n  const initialState = {\n    loginFields: {\n      email: \"\",\n      password: \"\",\n    },\n    alert: {\n      message: \"\",\n      isSuccess: false,\n    },\n  };\n  const [plants, setPlants] = useState()\n  const LocalToken = localStorage.getItem(\"token\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [alert, setAlert] = useState(initialState.alert);\n  const [loginField, setLoginField] = useState(initialState.loginFields);\n  const [token, setToken] = useState(LocalToken);\n  const [userGlobalState, setUserGlobalState] = useState({\n    userDetails:null,\n    token:null,\n    userId: null,\n    userPlants:null\n\n  });\n\n    const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n    setAlert({ message: \"\", isSuccess: false });\n    ApiServices.userLogin(\n      loginField,\n      setUser,\n      setIsLoggedIn,\n      userGlobalState,\n      setUserGlobalState\n    );\n  };\n\n\n\n  const [PlantMatch, setPlantMatch] = useState([])\n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n\n    setLoginField((prev) => ({\n      ...prev,\n      // eslint-disable-next-line no-restricted-globals\n      [event.target.name]: event.target.value,\n    }));\n  };\n  useEffect(()=>{\n    ApiServices.getAllPlants(setPlants)\n},[])\n  const values = {\n    token,\n    isLoggedIn,\n    user,\n    loginField,\n    handleLogin,\n    handleLoginInputChange,\n    alert,\n    setIsLoggedIn,\n    setUser,\n\n    userGlobalState,\n\n    setUserGlobalState,\n    plants,\n    setPlants,\n    PlantMatch,\n    setPlantMatch\n  };\n\n  return (\n    <UserContext.Provider value={values}>\n      {\" \"}\n      {props.children}{\" \"}\n    </UserContext.Provider>\n  );\n};\n","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/DataContext.js",["109","110","111"],"import { useState, useEffect, createContext } from \"react\";\nimport registerUSer from '../dataContext/register'\nimport { useParams } from \"react-router-dom\";\nimport getPlantByName from './plantbyname'\nimport   ApiServices from './ApiServices';\nexport const DataContext = createContext();\n\nexport const DataContextProvider = (props) => {\n    // user registeration\n    const plantiful = \"plantiful\"\n    const [path, setPath] = useState()\n    const [message, setMessage] = useState(false);\n    const initialState = {\n      fields: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      loginFields: {\n        email: \"\",\n        password: \"\",\n      },\n      alert: {\n        message: \"\",\n        isSuccess: false,\n      },\n\n    };\n      const [fields, setFields] = useState(initialState.fields);\n    const somevalue = `15`\n \n    // const [plants, setPlants] = useState()\n    const [plantByName, setPlantByName] = useState([]);\n    const [searchTerm, setSearchTerm] = useState()\n    \n    const handleFieldChange = (event) => {\n      event.preventDefault();\n      setFields((prev) => ({\n        ...prev,\n        [event.target.name]: event.target.value,\n      }));\n    };\n\n\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n         ApiServices.userRegister(fields, setMessage)\n        }\n\n      const handleEnter = (event) => {\n        if (event.key === \"Enter\") {\n          // return handlePlantSearch();\n        }\n      };\n      const handleInputChange = (event) => setSearchTerm(event.target.value);\n \n  // const handlePlantSearch = () => {\n  //   getForecast(searchText, setSelectedDate, setForecasts, setLocation);\n  //   setSearchText(\"\");\n  // };\n const { latinname } = useParams();\n\nuseEffect(()=>{\n\n  getPlantByName(setPlantByName, path)\n},[])\n\n\n      const value = {\n        fields,\n\n        setFields,\n\n        message,\n        setMessage,\n        handleFieldChange,\n        handleSubmit,\n        // plants,\n        // setPlants,\n        plantByName,\n        setPlantByName,\n        searchTerm,\n        setSearchTerm,\n        setPath,\n        handleEnter,\n        getPlantByName,\n        plantiful,\n        handleInputChange,\n        ApiServices,\n        // loginField, \n        // setLoginField,\nsomevalue,\n        alert\n        // handlePlantSearch\n      };\n   \n\n  return (\n    <DataContext.Provider value={value}>{props.children}</DataContext.Provider>\n  );\n};\n","/Users/shabinapatel/Desktop/projects/plantiful/src/components/PlantPage.js",["112","113","114","115","116","117","118","119","120"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport dummyPlant from \"../assets/dummyPlant.png\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"../styles/PlantPage.css\";\nimport Alert from \"./Alert\";\nimport getPlantByName from '../dataContext/plantbyname'\nimport ApiCalls from \"../dataContext/ApiServices\";\nimport { PlantContext } from \"../dataContext/PlantConetx\";\n\n\nconst PlantPage = () => {\nconst {singlePlant} = useContext(PlantContext)\n\nconsole.log(singlePlant)\nconst initialState = {\n\talert: {\n\t\tmessage: \"\",\n\t\tisSuccess: false,\n\t}\n}\nconst [plantById, setPlantById] = useState(\"\");\nconst [user, setUser] = useState(\"\")\n  const [alert, setAlert] = useState(initialState.alert)\n// useEffect(()=> {\n\n// setUser(localStorage.getItem(\"userDetails\"))\n\n// })\n\n\tconst settings = {\n\t\tdots: true,\n\t\tlazyLoad: true,\n\t\tinfinite: true,\n\t\tspeed: 500,\n\t\tslidesToShow: 1,\n\t\tslidesToScroll: 1,\n\t\tinitialSlide: 2,\n\t};\nconst plantId = window.location.pathname.split(\"/\")[2] \nconsole.log(plantById)\nconst [loading, setLoading ]= useState(false)\nconst [familyName, setFamilyName]=useState()\n\nuseEffect(() => {\n    const getSinglePlant = async () => {\n      const res = await axios.get(\"/plants/\" + plantId);\n      setFamilyName(res.data.familyName);\n\t  setPlantById(res.data)\n    };\n    getSinglePlant();\n  }, [plantId]);\n \nconst plant_id= window.location.pathname.split(\"/\")[2]\n\nconst loggedInUSerId =JSON.parse(localStorage.getItem(\"userId\"))\nconst email =JSON.parse(localStorage.getItem(\"userEmail\"))\nconsole.log(typeof loggedInUSerId)\nconsole.log(`logged in user is ${loggedInUSerId} and plant id is ${plantId}`)\n const handleSumbit= async()=>{\n\tconst res = await axios.post('/users/user/addplant',{\n\t\tplantId: plantId,\n\t\tuserId: loggedInUSerId\n\t }) \nif(res) {\n\tsetAlert({\n\t\tmessage: \"Plant added to Dashboard!\",\n\t\tisSuccess: true\n\t})\n}\t\n\n }\n\treturn (\n\t\t<>\n\t\t<div className='wrapper'>\n  \n\t\t\t<Container >\n\n\t\t\t{plantById  &&  <div className=\"title_border\">\n\t\t\t\t<h2 className='plant_title'> {familyName && familyName} </h2>\n\t\t\t\t</div>\n}\n\t\t\t\t<Slider {...settings}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t</Slider>\n\t\t\t\t{}\n\t\t\t\t<div className='plant_info'>\n\t\t\t\t\t\t<p className='plant_information_latinname'>\n                    <span className=\"plant_info_title\">Latin name:</span> {plantById.latinName}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_origin'>\n\t\t\t\t\t\t<span className=\"plant_info_title\">Origin:</span> {plantById.origin}\n\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_wateringneeds'>\n\t\t\t\t\t<span className=\"plant_info_title\">\tWatering Needs:</span> {plantById.watering}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_temperature'>\n                    <span className=\"plant_info_title\">Temperature:</span> {plantById.temperature}&deg;<sup>c</sup>\n\t\t\t\t\t</p>\n\t\t\t\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tid='submit'\n                        className=\"add_button\"\n\t\t\t\t\t\tonClick={handleSumbit}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: \"#55A356\",\n\t\t\t\t\t\t\tborder: \"#013606\",\n\t\t\t\t\t\t\tmargin: \"8px\",\n\t\t\t\t\t\t\tpadding: \"10px\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\nAdd to dashboard\n\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t <Alert message={alert.message} success={alert.isSuccess} />\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default PlantPage;\n\n\n","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Navbar.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Footer.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/ErrorPage.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/userRegistration.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Home.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Dashboard.js",["121","122","123","124","125","126","127","128"],"import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Container,\n  Button,\n  Form,\n  Card,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport Emoji from \"a11y-react-emoji\";\nimport dummyPlant from \"../assets/dummyPlant.png\";\nimport { XCircle, CheckCircle, PauseCircle } from \"phosphor-react\";\nimport { UserContext } from \"../dataContext/UserContext\";\nimport { useParams } from \"react-router-dom\";\nimport \"../styles/Dashboard.css\";\nimport { Link } from \"react-router-dom\";\nimport Alert from \"./Alert\";\nimport ApiCalls from '../dataContext/ApiServices';\nimport axios from 'axios'\n\n\nconst Dashboard = () => {\n  const initialState = {\n    alert: {\n      message: \"\",\n      isSuccess: false,\n    }\n  }\n  const [plantData, setPlantData] = useState(\n    JSON.parse(localStorage.getItem(\"plants\")) || []\n  );\n  const [alert, setAlert] = useState(initialState.alert)\n  const {\n    userGlobalState,\n    setPlantMatch,\n    plants,\n    setPlants,\n    setUserGlobalState,\n  } = useContext(UserContext);\n  const [notificationInfo, setNotificationInfo] = useState({\n    plantName: null,\n    plantId: null,\n    frequency: null,\n  });\n  const [frequency, setFrequency] = useState();\n  const handleFrequency = (e) => {\n    setFrequency(e.target.value);\n  };\n  console.log(userGlobalState)\n\n  const handlePlantInfo = (e) => {\n    setFrequency(e.target.value);\n  };\n\n  const user = JSON.parse(localStorage.getItem(\"userId\"))\n  const email = JSON.parse(localStorage.getItem(\"userEmail\"))\n\n  console.log(user)\n  const [userPlants, setUserPlants] = useState([])\n  const userId = window.location.pathname.split(\"/\")[2]\n  useEffect(() => {\n    const getUserPlants = async () => {\n      const res = await axios.get(\"/users/\" + userId);\n      setUserPlants(res.data.userPlants)\n\n    };\n    getUserPlants();\n  }, [userId]);\n  console.log(userPlants)\n\n \n  console.log(user)\n\n\n  // const pureData = userPlants && plantData.map((plant) => {\n  //   return {\n  //     plantId: plant._id,\n  //     plantName: plant.familyName,\n  //     watering: plant.watering,\n  //   };\n  // });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    ApiCalls.CreateNotification(notificationInfo, user, email)\n    setAlert({\n      message: \"Notification created. Keep an eye on your inbox!📩\",\n     isSuccess: true\n    })\n  };\n\n  return (\n    <div className=\"dashboard_wrapper\">\n      <Container fluid>\n        <div className=\"title_border\">\n          <h2 className=\"dashboard_title\">\n            {\" \"}\n            Your Plant Dashboard <Emoji symbol=\"🪴\" label=\"plant-pot\" />{\" \"}\n          </h2>{\" \"}\n        </div>\n\n        <p className=\"dashboard_text\">\n          {\" \"}\n          Welcome to your <span className=\"brandname\"> Plantiful </span>{\" \"}\n          dashboard. Here you can set and amend notifications for your plants.\n        </p>\n        <Alert message={alert.message} success={alert.isSuccess} />\n        <div className=\"dashboard_section\">\n          <form onSubmit={handleSubmit}>\n            <Row xs={2} md={4} className=\"g-4\" >\n            \n              <Col style={{display: \"flex\", flexDirection: \"row\"}}>\n                {\" \"}\n                {userPlants !== null ? userPlants.map((plant) => (\n                  <Card\n                    key={plant._id}\n                    Card\n                    style={{\n                      width: \"80rem\",\n                      border: \"1px solid #013606\",\n                      flex: 1,\n                      padding: \"10px\",\n                      margin: \"10px\"\n                    }}\n                  >\n                    <Card.Img variant=\"top\" src={dummyPlant} />{\" \"}\n                    <Card.Body>\n                      <Card.Title className=\"plantcard_title\">\n                        {\" \"}\n                        {plant.familyName}{\" \"}\n                      </Card.Title>\n                      <Card.Text className=\"plantcard_text\">\n                        I like to be watered{\" \"}\n                        <span className=\"plantcard_watering\">\n                          {\" \"}\n                          {plant.watering}{\" \"}\n                        </span>{\" \"}\n                      </Card.Text>{\" \"}\n                    </Card.Body>{\" \"}\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem className=\"plantcard_notification\">\n                        {\" \"}\n                        Schedule notification:{\" \"}\n                      </ListGroupItem>{\" \"}\n                      <Form.Select\n                        value={frequency}\n                        onChange={handleFrequency}\n                        size=\"sm\"\n                      >\n                        <option> Select Frequency </option>{\" \"}\n                        <option> Weekly </option>{\" \"}\n                        <option> Twice Weekly </option>{\" \"}\n                        <option> Monthly </option>{\" \"}\n                      </Form.Select>{\" \"}\n                      <Button\n                        className=\"plantcard_button\"\n                        variant=\"success\"\n                        onClick={() =>\n                          setNotificationInfo({\n                            plantName: plant.familyName,\n                            plantId: plant._id,\n                            frequency: frequency,\n                          \n                          })\n                        }\n                        type=\"submit\"\n                      >\n                        {\" \"}\n                        Create notification{\" \"}\n                      </Button>{\" \"}\n                    </ListGroup>{\" \"}\n                    <Card.Body>\n                      <Link to={`${plant._id}`}>\n                        {\" \"}\n                  \n                      </Link>\n                      <Button onClick={() => {\n                          ApiCalls.PauseNotification(user, plant._id);  setAlert({\n                            message: \"Settings updated. You will stop receiving notifications for this plant.\",\n                           isSuccess: true\n                          })\n                        }} className=\"remove_btn\"><PauseCircle size={18} /> Mute Notification </Button>{\" \"}\n\n                      <Button href=\"#\" onClick={()=>{\n                        ApiCalls.removePlant(user, plant._id)\n                      }} className=\"remove_btn\"><XCircle size={18} /> Remove Plant </Button>{\" \"}\n                      <Button href=\"#\" onClick={()=>{\n                        ApiCalls.watered(user, plant._id); setAlert({\n                          message: \"Thanks for watering your plant! 🌱\",\n                         isSuccess: true\n                        })\n                      }} className=\"remove_btn\"> <CheckCircle size={18} /> Plant Watered </Button>{\" \"}\n           \n                    </Card.Body>\n                  </Card>\n                  )) : \"No Plants.\"}\n             \n              </Col>\n            </Row>\n           \n          </form>\n     \n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/shabinapatel/Desktop/projects/plantiful/src/components/RegisterForm.js",["129","130"],"import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Form, FloatingLabel, Button } from \"react-bootstrap\";\nimport { ArrowRight } from \"phosphor-react\";\nimport {UserRegistration} from '../dataContext/userRegistration'\nimport \"../styles/RegisterForm.css\";\n\n\nconst RegisterForm = () => {\n\tconst {handleFieldChange, message, fields, handleSubmit} = useContext(UserRegistration)\n\n\treturn (\n\t\t<div className=\"form_wrapper\">\n\t\t\t<div>\n\t\t\t\t<h2 className='signup_header'>Sign up to Plantiful</h2>\n\t\t\t</div>\n\t\t\t<div className=\"form_container\">\n\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t<Form.Group className='mb-3' controlId='formBasicUsername'>\n\t\t\t\t\t\t<FloatingLabel\n\t\t\t\t\t\t\tcontrolId='floatingInput'\n\t\t\t\t\t\t\tlabel='Enter your name'\n\t\t\t\t\t\t\tclassName='mb-3'\n\t\t\t\t\t\t\tstyle={{color: \"#565956\"}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t    className=\"w-50\"\n\t\t\t\t\t\t\t\ttype='textbox'\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tplaceholder=\"Enter your name\"\n\t\t\t\t\t\t\t\tvalue={fields.name}\n\t\t\t\t\t\t\t\tonChange={handleFieldChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group className='mb-3' controlId='formBasicEmail'>\n\t\t\t\t\t\t<FloatingLabel\n\t\t\t\t\t\t\tcontrolId='floatingInput'\n\t\t\t\t\t\t\tlabel='Enter your email address'\n\t\t\t\t\t\t\tclassName='mb-3'\n\t\t\t\t\t\t\tstyle={{color: \"#565956\"}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tplaceholder='Enter your email address'\n\t\t\t\t\t\t\t\tvalue={fields.email}\n\t\t\t\t\t\t\t\tonChange={handleFieldChange}\n\t\t\t\t\t\t\t\tclassName=\"w-50\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t\t<Form.Text className='text-muted'>\n\t\t\t\t\t\t\tWe'll never share your email with anyone else.\n\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group className='mb-3' controlId='formBasicPassword'>\n\t\t\t\t\t\t<FloatingLabel\n\t\t\t\t\t\t\tcontrolId='floatingInput'\n\t\t\t\t\t\t\tlabel='Create Password'\n\t\t\t\t\t\t\tclassName='mb-3'\n\t\t\t\t\t\t\tstyle={{color: \"#565956\"}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tclassName=\"w-50\"\n\t\t\t\t\t\t\t\tplaceholder='Create Password'\n\t\t\t\t\t\t\t\tdata-testid='passwordinput'\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalue={fields.password}\n\t\t\t\t\t\t\t\tonChange={handleFieldChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group className='mb-3' controlId='formBasicConfirmPassword'>\n\t\t\t\t\t\t<FloatingLabel\n\t\t\t\t\t\t\tcontrolId='floatingInput'\n\t\t\t\t\t\t\tlabel='Confirm Password'\n\t\t\t\t\t\t\tclassName='mb-3'\n\t\t\t\t\t\t\tstyle={{color: \"#565956\"}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tclassName=\"w-50\"\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\t\t\t\tdata-testid='confirmPassword'\n\t\t\t\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\t\t\t\tvalue={fields.confirmPassword}\n\t\t\t\t\t\t\t\tonChange={handleFieldChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<div className=\"button_and_membertext\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tid=\"submit\"\n\t\t\t\t\t\tclassName='signup_button'\n\t\t\t\t\t\tdata-testid='submitbutton'\n\t\t\t\t\t\tstyle={{ backgroundColor: \"#55A356\", border: \"#013606\"}}\n\t\t\t\t\t>\n\t\t\t\t\t\tCreate account <ArrowRight size={20} />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<p className=\"member_text\">Already a member?<a href=\"/loginform\" className=\"signin_link\"> Sign in </a></p>\n\t\t\t\t </div>\n\t\t\t\t  <p> {message && message} </p>\n\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RegisterForm;\n","/Users/shabinapatel/Desktop/projects/plantiful/src/components/List/List.js",["131","132","133","134","135","136","137","138"],"import { Plus, Heart, ArrowRight } from \"phosphor-react\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport \"./list.css\";\nimport { UserContext } from \"../../dataContext/UserContext\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../Pagination/Pagination\";\nimport ApiCalls from \"../../dataContext/ApiServices\";\nimport {PlantContext} from '../../dataContext/PlantConetx'\nimport axios from 'axios'\nfunction List() {\n  const { plants, PlantMatch, setPlantMatch } =\n    useContext(UserContext);\n  const [search, setSearch] = useState(\"\");\nconst [user, setUser] = useState(\"\")\n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n    setSearch(event.target.value);\n    plantSearch(search);\n  };\n  const {setSinglePlant} = useContext(PlantContext)\n  const plantId = window.location.pathname.split(\"/\")[2] \n  const [loading, setLoading] = useState()\n\nconst getSinglePlant = async () => {\n      const res = await axios.get(\"/plants/\" + plantId);\n      setSinglePlant(res.data);\n    //   setTitle(res.data.title);\n    //   setDesc(res.data.desc);\n    };\n\n\n  useEffect(() => {\n    \n    getSinglePlant();\n  }, [plantId]);\n\n  const plantSearch = (search) => {\n    let matchedPlant = plants.filter((plant) => {\n      const regex = new RegExp(`${search}`, \"gi\");\n      return plant.latinName.match(regex) || plant.familyName.match(regex);\n    });\n    setPlantMatch(matchedPlant)\n   \n  };\n  const [plantDetails, setPlantDetails] = useState({\n\n  })\n\n\n\nconst rendering =  (PlantMatch.length > 0 )? PlantMatch:plants\n\n  return (\n    <>\n      <Container\n        fluid\n        style={{\n          backgroundColor: \"#F9F5F1\",\n        }}\n      >\n        <section className=\"panel\">\n          <header className=\"panel-heading\"> </header>{\" \"}\n          <div className=\"panel-body\">\n            <div className=\"row p-3\">\n              <div className=\"col-12\">\n                <div className=\"input-group \">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search for a plant..\"\n                    className=\"w-50 search_input\"\n                    value={search}\n                    onChange={handleLoginInputChange}\n                  />\n                  <Button\n                    type=\"submit\"\n                    id=\"submit\"\n                    style={{\n                      backgroundColor: \"#55A356\",\n                      border: \"#013606\",\n                      margin: \"8px\",\n                      overflow: \"hidden\",\n                    }}\n                  >\n                    Go! <ArrowRight size={20} />{\" \"}\n                  </Button>{\" \"}\n                </div>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <table className=\"table table-hover p-table\">\n            <thead className=\"p_titles\">\n              <tr>\n                <th> Plant Name </th> <th> Image </th> <th> Origin </th>{\" \"}\n                <th> Watering needs </th> <th> Temperature </th> <th> Like </th>{\" \"}\n                <th> Add </th>{\" \"}\n              </tr>{\" \"}\n            </thead>{\" \"}\n            <tbody>\n              {rendering &&\n                rendering.map((plant, index) => (\n                  <>\n                    <div className=\"user\"> </div>{\" \"}\n                    <tr>\n                      <td className=\"p-name\" onClick={getSinglePlant}>\n                        <Link to={`${plant._id}`}>\n                          {\" \"}\n                          {plant.familyName}{\" \"}\n                        </Link>\n\n                        <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <a href=\"plant\"> {plant.familyName} </a> <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <small> {plant.origin} </small>{\" \"}\n                      </td>\n                      <td className=\"p-name\">\n                        <small> {plant.watering} </small>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <span className=\"label label-danger\">\n                          {\" \"}\n                          {plant.temperature} &deg; <sup> c </sup>{\" \"}\n                        </span>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <form > \n                        <Heart size={30} weight=\"bold\" className=\"m-4\" />\n                        </form>\n                      </td>{\" \"}\n                      <td>\n                        <Plus size={20} weight=\"bold\" />\n                      </td>{\" \"}\n                    </tr>\n                  </>\n                ))}{\" \"}\n            </tbody>{\" \"}\n          </table>{\" \"}\n        </section>{\" \"}\n      </Container>\n\n      <Pagination />\n    </>\n  );\n}\n\nexport default List;\n","/Users/shabinapatel/Desktop/projects/plantiful/src/components/LoginForm.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/ApiServices.js",["139","140","141","142"],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/plantbyname.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Alert.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Pagination/Pagination.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/register.js",["143"],"import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\nconst urlEndPoint = process.env.REACT_APP_APIENDPOINT\nconsole.log(urlEndPoint)\n\n\nconst handleUserRegister = async(fields,setMessage ) => {\nconsole.log(fields.name);\n\n\ntry {\n     const response = await axios.post(\"/auth/register\",{\n      name: fields.name,\n      email: fields.email,\n      password: fields.password,\n\n    })\n    const data = await response\n    console.log(data.data)\n    await setMessage(`Successfully created your account. Welcome to Plantiful!`)\n\n\n} catch (error) {\n\n  setMessage(`Sorry, there has been an error. Please try again.`)\n} \n    console.log(`Function triggered`, fields)\n    \n\n  };\n\n  export default handleUserRegister","/Users/shabinapatel/Desktop/projects/plantiful/src/components/PrivateRoutes.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/PlantConetx.js",["144"],"import { useState, useEffect, createContext } from \"react\";\nimport ApiServices from \"./ApiServices\";\nexport const PlantContext = createContext();\n\nexport const PlantContextProvider = (props) => {\n  const [plants, setPlants] = useState();\n  const [PlantMatch, setPlantMatch] = useState();\n\n  const plantSearch = (search) => {\n    let matchedPlant = plants.filter((plant) => {\n      const regex = new RegExp(`${search}`, \"gi\");\n      return plant.latinName.match(regex) || plant.familyName.match(regex);\n    });\n    setPlantMatch(matchedPlant);\n  };\n\nconst [singlePlant, setSinglePlant] = useState()\n\nconst handleSingleplant=(e, plantId, setSinglePlant)=>{\n  e.preventDefault()\n  ApiServices.getPlantById(plantId, setSinglePlant)\n\n}\n\n\n  const values = {\n    handleSingleplant,\n    plantSearch,\n    PlantMatch,\n    setPlants,\n    plants,\n    setPlantMatch,\n    singlePlant, \n    setSinglePlant\n    \n  };\n\n\n  return (\n    <PlantContext.Provider value={values}>\n      {\" \"}\n      {props.children}{\" \"}\n    </PlantContext.Provider>\n  );\n};\n",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":21,"column":22,"nodeType":"151","messageId":"152","endLine":21,"endColumn":31},{"ruleId":"149","severity":1,"message":"153","line":22,"column":8,"nodeType":"151","messageId":"152","endLine":22,"endColumn":11},{"ruleId":"149","severity":1,"message":"154","line":23,"column":10,"nodeType":"151","messageId":"152","endLine":23,"endColumn":21},{"ruleId":"149","severity":1,"message":"155","line":24,"column":8,"nodeType":"151","messageId":"152","endLine":24,"endColumn":16},{"ruleId":"149","severity":1,"message":"156","line":31,"column":3,"nodeType":"151","messageId":"152","endLine":31,"endColumn":18},{"ruleId":"149","severity":1,"message":"157","line":32,"column":3,"nodeType":"151","messageId":"152","endLine":32,"endColumn":16},{"ruleId":"149","severity":1,"message":"158","line":33,"column":3,"nodeType":"151","messageId":"152","endLine":33,"endColumn":9},{"ruleId":"149","severity":1,"message":"159","line":34,"column":3,"nodeType":"151","messageId":"152","endLine":34,"endColumn":12},{"ruleId":"149","severity":1,"message":"160","line":35,"column":3,"nodeType":"151","messageId":"152","endLine":35,"endColumn":21},{"ruleId":"149","severity":1,"message":"161","line":19,"column":10,"nodeType":"151","messageId":"152","endLine":19,"endColumn":17},{"ruleId":"149","severity":1,"message":"162","line":23,"column":17,"nodeType":"151","messageId":"152","endLine":23,"endColumn":25},{"ruleId":"149","severity":1,"message":"163","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":20},{"ruleId":"149","severity":1,"message":"164","line":62,"column":10,"nodeType":"151","messageId":"152","endLine":62,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":67,"column":3,"nodeType":"167","endLine":67,"endColumn":5,"suggestions":"168"},{"ruleId":"149","severity":1,"message":"169","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":19},{"ruleId":"149","severity":1,"message":"170","line":11,"column":8,"nodeType":"151","messageId":"152","endLine":11,"endColumn":22},{"ruleId":"149","severity":1,"message":"155","line":12,"column":8,"nodeType":"151","messageId":"152","endLine":12,"endColumn":16},{"ruleId":"149","severity":1,"message":"171","line":27,"column":8,"nodeType":"151","messageId":"152","endLine":27,"endColumn":12},{"ruleId":"149","severity":1,"message":"172","line":27,"column":14,"nodeType":"151","messageId":"152","endLine":27,"endColumn":21},{"ruleId":"149","severity":1,"message":"161","line":46,"column":8,"nodeType":"151","messageId":"152","endLine":46,"endColumn":15},{"ruleId":"149","severity":1,"message":"173","line":46,"column":17,"nodeType":"151","messageId":"152","endLine":46,"endColumn":27},{"ruleId":"149","severity":1,"message":"174","line":58,"column":7,"nodeType":"151","messageId":"152","endLine":58,"endColumn":15},{"ruleId":"149","severity":1,"message":"175","line":61,"column":7,"nodeType":"151","messageId":"152","endLine":61,"endColumn":12},{"ruleId":"149","severity":1,"message":"169","line":16,"column":10,"nodeType":"151","messageId":"152","endLine":16,"endColumn":19},{"ruleId":"149","severity":1,"message":"176","line":31,"column":10,"nodeType":"151","messageId":"152","endLine":31,"endColumn":19},{"ruleId":"149","severity":1,"message":"177","line":31,"column":21,"nodeType":"151","messageId":"152","endLine":31,"endColumn":33},{"ruleId":"149","severity":1,"message":"157","line":37,"column":5,"nodeType":"151","messageId":"152","endLine":37,"endColumn":18},{"ruleId":"149","severity":1,"message":"158","line":38,"column":5,"nodeType":"151","messageId":"152","endLine":38,"endColumn":11},{"ruleId":"149","severity":1,"message":"159","line":39,"column":5,"nodeType":"151","messageId":"152","endLine":39,"endColumn":14},{"ruleId":"149","severity":1,"message":"160","line":40,"column":5,"nodeType":"151","messageId":"152","endLine":40,"endColumn":23},{"ruleId":"149","severity":1,"message":"178","line":53,"column":9,"nodeType":"151","messageId":"152","endLine":53,"endColumn":24},{"ruleId":"149","severity":1,"message":"179","line":1,"column":29,"nodeType":"151","messageId":"152","endLine":1,"endColumn":37},{"ruleId":"149","severity":1,"message":"180","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":13},{"ruleId":"149","severity":1,"message":"155","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":16},{"ruleId":"149","severity":1,"message":"171","line":15,"column":8,"nodeType":"151","messageId":"152","endLine":15,"endColumn":12},{"ruleId":"149","severity":1,"message":"172","line":15,"column":14,"nodeType":"151","messageId":"152","endLine":15,"endColumn":21},{"ruleId":"149","severity":1,"message":"161","line":23,"column":10,"nodeType":"151","messageId":"152","endLine":23,"endColumn":17},{"ruleId":"149","severity":1,"message":"173","line":23,"column":19,"nodeType":"151","messageId":"152","endLine":23,"endColumn":29},{"ruleId":"165","severity":1,"message":"181","line":36,"column":6,"nodeType":"167","endLine":36,"endColumn":15,"suggestions":"182"},{"ruleId":"149","severity":1,"message":"183","line":46,"column":10,"nodeType":"151","messageId":"152","endLine":46,"endColumn":22},{"ruleId":"149","severity":1,"message":"184","line":46,"column":24,"nodeType":"151","messageId":"152","endLine":46,"endColumn":39},{"ruleId":"149","severity":1,"message":"185","line":3,"column":7,"nodeType":"151","messageId":"152","endLine":3,"endColumn":14},{"ruleId":"149","severity":1,"message":"186","line":33,"column":15,"nodeType":"151","messageId":"152","endLine":33,"endColumn":19},{"ruleId":"149","severity":1,"message":"187","line":117,"column":19,"nodeType":"151","messageId":"152","endLine":117,"endColumn":27},{"ruleId":"149","severity":1,"message":"187","line":135,"column":19,"nodeType":"151","messageId":"152","endLine":135,"endColumn":27},{"ruleId":"149","severity":1,"message":"188","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":1,"column":20,"nodeType":"151","messageId":"152","endLine":1,"endColumn":29},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'jwt' is defined but never used.","'DataContext' is defined but never used.","'ApiCalls' is defined but never used.","'userGlobalState' is assigned a value but never used.","'setPlantMatch' is assigned a value but never used.","'plants' is assigned a value but never used.","'setPlants' is assigned a value but never used.","'setUserGlobalState' is assigned a value but never used.","'loading' is assigned a value but never used.","'setToken' is assigned a value but never used.","'registerUSer' is defined but never used.","'latinname' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["191"],"'useParams' is defined but never used.","'getPlantByName' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'plant_id' is assigned a value but never used.","'email' is assigned a value but never used.","'plantData' is assigned a value but never used.","'setPlantData' is assigned a value but never used.","'handlePlantInfo' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'getSinglePlant'. Either include it or remove the dependency array.",["192"],"'plantDetails' is assigned a value but never used.","'setPlantDetails' is assigned a value but never used.","'baseURL' is assigned a value but never used.","'data' is assigned a value but never used.","'response' is assigned a value but never used.","'Navigate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [path]",{"range":"197","text":"198"},"Update the dependencies array to be: [getSinglePlant, plantId]",{"range":"199","text":"200"},[1798,1800],"[path]",[1212,1221],"[getSinglePlant, plantId]"]