[{"/Users/shabinapatel/Desktop/projects/plantiful/src/index.js":"1","/Users/shabinapatel/Desktop/projects/plantiful/src/App.js":"2","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/UserContext.js":"3","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/DataContext.js":"4","/Users/shabinapatel/Desktop/projects/plantiful/src/components/PlantPage.js":"5","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Navbar.js":"6","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Footer.js":"7","/Users/shabinapatel/Desktop/projects/plantiful/src/components/ErrorPage.js":"8","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/userRegistration.js":"9","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Home.js":"10","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Dashboard.js":"11","/Users/shabinapatel/Desktop/projects/plantiful/src/components/RegisterForm.js":"12","/Users/shabinapatel/Desktop/projects/plantiful/src/components/List/List.js":"13","/Users/shabinapatel/Desktop/projects/plantiful/src/components/LoginForm.js":"14","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/ApiServices.js":"15","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/plantbyname.js":"16","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Alert.js":"17","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Pagination/Pagination.js":"18","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/register.js":"19"},{"size":534,"mtime":1640020547831,"results":"20","hashOfConfig":"21"},{"size":3380,"mtime":1640255766768,"results":"22","hashOfConfig":"21"},{"size":1962,"mtime":1640020547826,"results":"23","hashOfConfig":"21"},{"size":2424,"mtime":1640020758723,"results":"24","hashOfConfig":"21"},{"size":4837,"mtime":1640020547818,"results":"25","hashOfConfig":"21"},{"size":1003,"mtime":1640020371473,"results":"26","hashOfConfig":"21"},{"size":2152,"mtime":1639334079856,"results":"27","hashOfConfig":"21"},{"size":153,"mtime":1640020371469,"results":"28","hashOfConfig":"21"},{"size":1057,"mtime":1639769969438,"results":"29","hashOfConfig":"21"},{"size":4663,"mtime":1639928854660,"results":"30","hashOfConfig":"21"},{"size":4972,"mtime":1640257637360,"results":"31","hashOfConfig":"21"},{"size":3089,"mtime":1640020371476,"results":"32","hashOfConfig":"21"},{"size":4249,"mtime":1640020547810,"results":"33","hashOfConfig":"21"},{"size":2197,"mtime":1640255766776,"results":"34","hashOfConfig":"21"},{"size":3151,"mtime":1640255766778,"results":"35","hashOfConfig":"21"},{"size":285,"mtime":1639238225468,"results":"36","hashOfConfig":"21"},{"size":428,"mtime":1640020547805,"results":"37","hashOfConfig":"21"},{"size":880,"mtime":1638628304158,"results":"38","hashOfConfig":"21"},{"size":719,"mtime":1639511673253,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"98p4ih",{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},"/Users/shabinapatel/Desktop/projects/plantiful/src/index.js",[],["87","88"],"/Users/shabinapatel/Desktop/projects/plantiful/src/App.js",["89","90","91","92","93","94","95","96","97"],"import RegisterForm from \"./components/RegisterForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport PlantsList from \"./components/List/List\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigationbar from \"./components/Navbar\";\nimport PlantPage from \"./components/PlantPage\";\nimport Dashboard from \"./components/Dashboard\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport Home from \"./components/Home\";\nimport Footer from \"./components/Footer\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport { DataContextProvider } from \"./dataContext/DataContext\";\nimport { UserRegContextProvider } from \"./dataContext/userRegistration\";\nimport { UserContextProvider } from \"./dataContext/UserContext\";\nimport { UserContext } from \"./dataContext/UserContext\";\nimport { useContext, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { DataContext } from \"./dataContext/DataContext\";\nimport ApiCalls from \"./dataContext/ApiServices\";\nfunction App() {\n\n  const Secret = process.env.REACT_APP_JWT_SECRET\n  console.log(Secret)\n  const { userGlobalState,setPlantMatch, plants, setPlants, setUserGlobalState } = useContext(UserContext);\n\n  // console.log(plants)\n//   useEffect(() => {\n//     setPlantMatch(plants)\n//    const token = JSON.parse(window.localStorage.getItem(\"token\"));\n\n//     const decodedUser = jwt.verify(token, \"secret\");\n//       if (token) {\n//       setUserGlobalState({\n//         ...decodedUser,\n     \n        \n//       });\n//     };\n//      console.log(userGlobalState)\n//   }, []);\n \n\n//   // const {   userGlobalState,   setUserGlobalState}= useContext(UserContext)\n// console.log(userGlobalState)\n//   // useEffect (()=>{\n  //   const token= JSON.parse(window.localStorage.getItem(\"token\"))\n  //   if (token) {\n  //     setUserGlobalState ({\n  //       ...userGlobalState,\n  //       token:token,\n  //     })}\n    \n  // //     if (!token) {\n  // //  setUserGlobalState({\n  // //       ...userGlobalState\n\n  // //     })\n    \n  //   else {\n  //   const decodedUser = jwt.verify(token, \"secret\");\n  //   setUserGlobalState({\n  //     ...decodedUser\n  //   })\n\n      \n  //   }\n  // }, []);\n\n\n  return (\n    <DataContextProvider>\n      <UserRegContextProvider>\n        <UserContextProvider>\n      <div className=\"App\">\n        <Container fluid=\"true\" className={\"no-gutters mx-0 px-0\"}>\n          <Router>\n            <Navigationbar fluid className={\"no-gutters mx-0 px-0\"}/>\n            <Routes>\n              <Route path=\"/\" element={<Home />}></Route>{\" \"}\n              <Route path=\"/registerform\" element={<RegisterForm />}></Route>{\" \"}\n              <Route path=\"/loginform\" element={<LoginForm />}></Route>{\" \"}\n              <Route path=\"/plants\" element={<PlantsList />}></Route>\n              <Route path=\"/plants/plantname/:latinname\" element={<PlantPage />}></Route>{\" \"}\n\n              <Route path=\"/dashboard\" element={<Dashboard/>}></Route>\n              <Route path=\"*\" element={<ErrorPage/>}></Route>\n            </Routes>{\" \"}\n          </Router>{\" \"}\n\t\t  <div className=\"page_container\">\n\t\t\t\t<div classname=\"content_wrap\">\n\t\t\t<Footer />\n\t\t\t</div>\n\t\t\t</div>\n        </Container>{\" \"}\n      </div>{\" \"}\n      </UserContextProvider>\n      </UserRegContextProvider>\n    </DataContextProvider>\n  );\n}\n\nexport default App;\n","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/UserContext.js",["98","99","100"],"import { useState, useEffect, createContext } from \"react\";\nimport ApiServices from \"./ApiServices\";\nexport const UserContext = createContext();\n\nexport const UserContextProvider = (props) => {\n  const initialState = {\n    loginFields: {\n      email: \"\",\n      password: \"\",\n    },\n    alert: {\n      message: \"\",\n      isSuccess: false,\n    },\n  };\n  const [plants, setPlants] = useState()\n  const LocalToken = localStorage.getItem(\"token\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [alert, setAlert] = useState(initialState.alert);\n  const [loginField, setLoginField] = useState(initialState.loginFields);\n  const [token, setToken] = useState(LocalToken);\n  const [userGlobalState, setUserGlobalState] = useState({\n    userDetails:null,\n    token:null,\n    userId: null,\n    userPlants:null\n\n  });\n\n    const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n    setAlert({ message: \"\", isSuccess: false });\n    ApiServices.userLogin(\n      loginField,\n      setUser,\n      setIsLoggedIn,\n      userGlobalState,\n      setUserGlobalState\n    );\n  };\n\n\n\n  const [PlantMatch, setPlantMatch] = useState([])\n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n\n    setLoginField((prev) => ({\n      ...prev,\n      // eslint-disable-next-line no-restricted-globals\n      [event.target.name]: event.target.value,\n    }));\n  };\n  useEffect(()=>{\n    ApiServices.getAllPlants(setPlants)\n},[])\n  const values = {\n    token,\n    isLoggedIn,\n    user,\n    loginField,\n    handleLogin,\n    handleLoginInputChange,\n    alert,\n    setIsLoggedIn,\n    setUser,\n\n    userGlobalState,\n\n    userGlobalState,\n    setUserGlobalState,\n    plants,\n    setPlants,\n    PlantMatch,\n    setPlantMatch\n  };\n\n  return (\n    <UserContext.Provider value={values}>\n      {\" \"}\n      {props.children}{\" \"}\n    </UserContext.Provider>\n  );\n};\n","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/DataContext.js",["101","102","103"],"import { useState, useEffect, createContext } from \"react\";\nimport registerUSer from '../dataContext/register'\nimport { useParams } from \"react-router-dom\";\nimport getPlantByName from './plantbyname'\nimport   ApiServices from './ApiServices';\nexport const DataContext = createContext();\n\nexport const DataContextProvider = (props) => {\n    // user registeration\n    const plantiful = \"plantiful\"\n    const [path, setPath] = useState()\n    const [message, setMessage] = useState(false);\n    const initialState = {\n      fields: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      loginFields: {\n        email: \"\",\n        password: \"\",\n      },\n      alert: {\n        message: \"\",\n        isSuccess: false,\n      },\n\n    };\n      const [fields, setFields] = useState(initialState.fields);\n    const somevalue = `15`\n \n    // const [plants, setPlants] = useState()\n    const [plantByName, setPlantByName] = useState([]);\n    const [searchTerm, setSearchTerm] = useState()\n    \n    const handleFieldChange = (event) => {\n      event.preventDefault();\n      setFields((prev) => ({\n        ...prev,\n        [event.target.name]: event.target.value,\n      }));\n    };\n\n\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n         ApiServices.userRegister(fields, setMessage)\n        }\n\n      const handleEnter = (event) => {\n        if (event.key === \"Enter\") {\n          // return handlePlantSearch();\n        }\n      };\n      const handleInputChange = (event) => setSearchTerm(event.target.value);\n \n  // const handlePlantSearch = () => {\n  //   getForecast(searchText, setSelectedDate, setForecasts, setLocation);\n  //   setSearchText(\"\");\n  // };\n const { latinname } = useParams();\n\nuseEffect(()=>{\n\n  getPlantByName(setPlantByName, path)\n},[])\n\n\n      const value = {\n        fields,\n\n        setFields,\n\n        message,\n        setMessage,\n        handleFieldChange,\n        handleSubmit,\n        // plants,\n        // setPlants,\n        plantByName,\n        setPlantByName,\n        searchTerm,\n        setSearchTerm,\n        setPath,\n        handleEnter,\n        getPlantByName,\n        plantiful,\n        handleInputChange,\n        ApiServices,\n        // loginField, \n        // setLoginField,\nsomevalue,\n        alert\n        // handlePlantSearch\n      };\n   \n\n  return (\n    <DataContext.Provider value={value}>{props.children}</DataContext.Provider>\n  );\n};\n","/Users/shabinapatel/Desktop/projects/plantiful/src/components/PlantPage.js",["104","105","106","107","108","109"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Plus } from \"phosphor-react\";\nimport { useParams } from \"react-router-dom\";\nimport dummyPlant from \"../assets/dummyPlant.png\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"../styles/PlantPage.css\";\nimport Alert from \"./Alert\";\nimport getPlantByName from '../dataContext/plantbyname'\nconst { DataContext } = require(\"../dataContext/DataContext\")\n\n\nconst PlantPage = () => {\nconst initialState = {\n\talert: {\n\t\tmessage: \"\",\n\t\tisSuccess: false,\n\t}\n}\nconst [plantByName, setPlantByName] = useState([]);\nconst [user, setUser] = useState(\"\")\n  const [alert, setAlert] = useState(initialState.alert)\n// useEffect(()=> {\n\n// setUser(localStorage.getItem(\"userDetails\"))\n\n// })\n\n\tconst settings = {\n\t\tdots: true,\n\t\tlazyLoad: true,\n\t\tinfinite: true,\n\t\tspeed: 500,\n\t\tslidesToShow: 1,\n\t\tslidesToScroll: 1,\n\t\tinitialSlide: 2,\n\t};\n\n\tconst { latinname } = useParams();\n\nconst familyName = plantByName.familyName\nconst watering = plantByName.watering\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`/plants/plantname/${latinname}`)\n\n\t\t\t.then((response) => {\n\t\t\t\tsetPlantByName(response.data[0]);\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t}, [latinname]);\n\nfunction addPlant (plant) {\n\n\tlet existingPlants = localStorage.getItem(\"userPlants\");\n\tlet existingPlantsActual = existingPlants ? JSON.parse(existingPlants) : [];\n\t// const currentPlantSaved = existingPlants.find((x) => x.id === plant.id)\n\t// \tif (currentPlantSaved) {\n\t// \t\tconst filteredPlantList = existingPlants.filter(\n\t// \t\t\t(x) => x.id !== plant.id\n\t// \t\t)\nexistingPlantsActual.push(familyName)\nsetUser(localStorage.setItem(\n\t\"userPlants\", JSON.stringify(existingPlantsActual),\n\tsetAlert({\n          message: 'Plant added to dashboard!',\n          isSuccess: true,\n        })\n))}\n\n// else {\n\n// existingPlants.push(familyName)\n// setUser(localStorage.setItem(\n// \t\"userPlants\", JSON.stringify(existingPlants)))\n// }}\n\n\treturn (\n\t\t<>\n\t\t<div className='wrapper'>\n\n\t\t\t<Container >\n\t\t\t<div className=\"title_border\">\n\t\t\t\t<h2 className='plant_title'> {plantByName.familyName} </h2>\n\t\t\t\t</div>\n\t\t\t\t<Slider {...settings}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t</Slider>\n\n\t\t\t\t<div className='plant_info'>\n\t\t\t\t\t\t<p className='plant_information_latinname'>\n                    <span className=\"plant_info_title\">Latin name:</span> {plantByName.latinName}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_origin'>\n\t\t\t\t\t\t<span className=\"plant_info_title\">Origin:</span> {plantByName.origin}\n\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_wateringneeds'>\n\t\t\t\t\t<span className=\"plant_info_title\">\tWatering Needs:</span> {plantByName.watering}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_temperature'>\n                    <span className=\"plant_info_title\">Temperature:</span> {plantByName.temperature}&deg;<sup>c</sup>\n\t\t\t\t\t</p>\n\t\t\t\t\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tid='submit'\n                        className=\"add_button\"\n\t\t\t\t\t\tonClick={addPlant}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: \"#55A356\",\n\t\t\t\t\t\t\tborder: \"#013606\",\n\t\t\t\t\t\t\tmargin: \"8px\",\n\t\t\t\t\t\t\tpadding: \"10px\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\nAdd to dashboard\n\n\t\t\t\t\t</Button>\n\t\t\t\t\t <Alert message={alert.message} success={alert.isSuccess} />\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default PlantPage;\n\n\n\n// //function to add plant\n// // function addPlant(plant) {\n// // \t\tconst currentPlantSaved = plantList.find((x) => x.id === plant.id)\n// // \t\tif (currentPlantSaved) {\n// // \t\t\tconst filteredPlantList = plantList.filter(\n// // \t\t\t\t(x) => x.id !== plant.id\n// // \t\t\t)\n// // \t\t\tsetPlantList([\n// // \t\t\t\t...filteredPlantList,\n// // \t\t\t\t{ plantFamilyName: familyName, plantWatering: watering}\n// // \t\t\t])\n// // \t\t} else {\n// // \t\t\tsetPlantList([...plantList, { plantFamilyName: familyName, plantWatering: watering }])\n// // \t\t}\n// // \t}\n// //function to add plant using API\n//   const addPlantTest = async (plant) => {\n// \t  const currentPlantSaved = plantList.find((x) => x.id === plant.id)\n// \t\tif (currentPlantSaved) {\n// \t\t\tconst filteredPlantList = plantList.filter(\n// \t\t\t\t(x) => x.id !== plant.id\n// \t\t\t)\n// \t\t\tconst res = await axios.post(`userplants/${user}`) \n// \t\t\tsetPlantList([\n// \t\t\t\t...filteredPlantList,\n// \t\t\t\t{ plantFamilyName: familyName, plantWatering: watering}\n// \t\t\t])\n// \t\t} else {\n// \t\t\tsetPlantList([...plantList, { plantFamilyName: familyName, plantWatering: watering }])\n// \t\t}\n  \n//   };\n// console.log(plantList)","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Navbar.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Footer.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/ErrorPage.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/userRegistration.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Home.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Dashboard.js",["110","111","112","113","114","115","116","117","118"],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/RegisterForm.js",["119","120"],"import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Form, FloatingLabel, Button } from \"react-bootstrap\";\nimport { ArrowRight } from \"phosphor-react\";\nimport {UserRegistration} from '../dataContext/userRegistration'\nimport \"../styles/RegisterForm.css\";\n\n\nconst RegisterForm = () => {\n\tconst {handleFieldChange, message, fields, handleSubmit} = useContext(UserRegistration)\n\n\treturn (\n\t\t<div className=\"form_wrapper\">\n\t\t\t<div>\n\t\t\t\t<h2 className='signup_header'>Sign up to Plantiful</h2>\n\t\t\t</div>\n\t\t\t<div className=\"form_container\">\n\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t<Form.Group className='mb-3' controlId='formBasicUsername'>\n\t\t\t\t\t\t<FloatingLabel\n\t\t\t\t\t\t\tcontrolId='floatingInput'\n\t\t\t\t\t\t\tlabel='Enter your name'\n\t\t\t\t\t\t\tclassName='mb-3'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t    className=\"w-50\"\n\t\t\t\t\t\t\t\ttype='textbox'\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tplaceholder=\"Enter your name\"\n\t\t\t\t\t\t\t\tvalue={fields.name}\n\t\t\t\t\t\t\t\tonChange={handleFieldChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group className='mb-3' controlId='formBasicEmail'>\n\t\t\t\t\t\t<FloatingLabel\n\t\t\t\t\t\t\tcontrolId='floatingInput'\n\t\t\t\t\t\t\tlabel='Enter your email address'\n\t\t\t\t\t\t\tclassName='mb-3'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tplaceholder='Enter your email address'\n\t\t\t\t\t\t\t\tvalue={fields.email}\n\t\t\t\t\t\t\t\tonChange={handleFieldChange}\n\t\t\t\t\t\t\t\tclassName=\"w-50\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t\t<Form.Text className='text-muted'>\n\t\t\t\t\t\t\tWe'll never share your email with anyone else.\n\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group className='mb-3' controlId='formBasicPassword'>\n\t\t\t\t\t\t<FloatingLabel\n\t\t\t\t\t\t\tcontrolId='floatingInput'\n\t\t\t\t\t\t\tlabel='Create Password'\n\t\t\t\t\t\t\tclassName='mb-3'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tclassName=\"w-50\"\n\t\t\t\t\t\t\t\tplaceholder='Create Password'\n\t\t\t\t\t\t\t\tdata-testid='passwordinput'\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalue={fields.password}\n\t\t\t\t\t\t\t\tonChange={handleFieldChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group className='mb-3' controlId='formBasicConfirmPassword'>\n\t\t\t\t\t\t<FloatingLabel\n\t\t\t\t\t\t\tcontrolId='floatingInput'\n\t\t\t\t\t\t\tlabel='Confirm Password'\n\t\t\t\t\t\t\tclassName='mb-3'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tclassName=\"w-50\"\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\t\t\t\tdata-testid='confirmPassword'\n\t\t\t\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\t\t\t\tvalue={fields.confirmPassword}\n\t\t\t\t\t\t\t\tonChange={handleFieldChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tid=\"submit\"\n\t\t\t\t\t\tclassName='button-primary'\n\t\t\t\t\t\tdata-testid='submitbutton'\n\t\t\t\t\t\tstyle={{ backgroundColor: \"#55A356\", border: \"#013606\"}}\n\t\t\t\t\t>\n\t\t\t\t\t\tCreate account <ArrowRight size={20} />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<p className=\"member_text\">Already a member?<a href=\"/loginform\" className=\"signin_link\"> Sign in </a></p>\n\t\t\t\t  <p> {message && message} </p>\n\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RegisterForm;\n","/Users/shabinapatel/Desktop/projects/plantiful/src/components/List/List.js",["121","122","123","124"],"import { Plus, Heart, ArrowRight } from \"phosphor-react\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport \"./list.css\";\nimport { UserContext } from \"../../dataContext/UserContext\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../Pagination/Pagination\";\nimport ApiCalls from \"../../dataContext/ApiServices\";\n\nfunction List() {\n  const { plants, PlantMatch, setPlantMatch } =\n    useContext(UserContext);\n  const [search, setSearch] = useState(\"\");\nconst [user, setUser] = useState(\"\")\n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n    setSearch(event.target.value);\n    plantSearch(search);\n  };\n\n  const plantSearch = (search) => {\n    let matchedPlant = plants.filter((plant) => {\n      const regex = new RegExp(`${search}`, \"gi\");\n      return plant.latinName.match(regex) || plant.familyName.match(regex);\n    });\n    setPlantMatch(matchedPlant)\n   \n  };\n\n\n\nconst rendering =  (PlantMatch.length > 0 )? PlantMatch:plants\n\n  return (\n    <>\n      <Container\n        fluid\n        style={{\n          backgroundColor: \"#F9F5F1\",\n        }}\n      >\n        <section className=\"panel\">\n          <header className=\"panel-heading\"> </header>{\" \"}\n          <div className=\"panel-body\">\n            <div className=\"row p-3\">\n              <div className=\"col-12\">\n                <div className=\"input-group \">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search for a plant..\"\n                    className=\"w-50 search_input\"\n                    value={search}\n                    onChange={handleLoginInputChange}\n                  />\n                  <Button\n                    type=\"submit\"\n                    id=\"submit\"\n                    style={{\n                      backgroundColor: \"#55A356\",\n                      border: \"#013606\",\n                      margin: \"8px\",\n                      overflow: \"hidden\",\n                    }}\n                  >\n                    Go! <ArrowRight size={20} />{\" \"}\n                  </Button>{\" \"}\n                </div>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <table className=\"table table-hover p-table\">\n            <thead className=\"p_titles\">\n              <tr>\n                <th> Plant Name </th> <th> Image </th> <th> Origin </th>{\" \"}\n                <th> Watering needs </th> <th> Temperature </th> <th> Like </th>{\" \"}\n                <th> Add </th>{\" \"}\n              </tr>{\" \"}\n            </thead>{\" \"}\n            <tbody>\n              {rendering &&\n                rendering.map((plant, index) => (\n                  <>\n                    <div className=\"user\"> </div>{\" \"}\n                    <tr>\n                      <td className=\"p-name\">\n                        <Link to={`plantname/${plant.latinName}`}>\n                          {\" \"}\n                          {plant.familyName}{\" \"}\n                        </Link>\n\n                        <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <a href=\"plant\"> {plant.familyName} </a> <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <small> {plant.origin} </small>{\" \"}\n                      </td>\n                      <td className=\"p-name\">\n                        <small> {plant.watering} </small>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <span className=\"label label-danger\">\n                          {\" \"}\n                          {plant.temperature} &deg; <sup> c </sup>{\" \"}\n                        </span>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <Heart size={30} weight=\"bold\" className=\"m-4\" />\n                      </td>{\" \"}\n                      <td>\n                        <Plus size={20} weight=\"bold\" />\n                      </td>{\" \"}\n                    </tr>\n                  </>\n                ))}{\" \"}\n            </tbody>{\" \"}\n          </table>{\" \"}\n        </section>{\" \"}\n      </Container>\n\n      <Pagination />\n    </>\n  );\n}\n\nexport default List;\n","/Users/shabinapatel/Desktop/projects/plantiful/src/components/LoginForm.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/ApiServices.js",["125"],"import axios from \"axios\";\n\n\nconst ApiCalls = {\n\n    getAllPlants: async (setPlants) => {\n        const baseURL = `https://api.eastberry.io`\n\n        let endpoint = '/plants';\n        const response = await axios.get(baseURL+endpoint)\n        const data = await response.data\n        setPlants(data)\n\n\n    },\n    getPlantByName: async (setPlantByName, latinname) => {\n        let endpoint = `/plants/plantname/${latinname}`\n        const response = await axios.get(endpoint)\n        const data = await response.data[0]\n        setPlantByName(data)\n\n    },\n    searchPlant: async (searchTerm) => {\n\n        let endpoint = '/plant';\n        if (searchTerm) {\n            endpoint = searchTerm + {\n                searchTerm\n            }\n        }\n        const response = await axios.get(endpoint)\n        const data = await response.data\n\n    },\n    userRegister: async (fields, setMessage) => {\n        try {\n            const response = await axios.post(\"/auth/register\", {\n                name: fields.name,\n                email: fields.email,\n                password: fields.password,\n\n            })\n            response.data && window.location.replace(\"/loginForm\");\n\n\n\n            //    const data = await response\n            console.log(response.data)\n            await setMessage(`Form has been submited sucessfully`)\n        } catch (error) {\n\n\n            setMessage(`Failed to submit form`)\n        }\n\n\n    },\n    userLogin: async (loginField, setUser, setIsLoggedIn, userGlobalState,\n        setUserGlobalState) => {\n        try {\n\n            const response = await axios.post('/auth/login', {\n                email: loginField.email,\n                password: loginField.password\n            }, )\n            console.log(response.data.others)\n            response && localStorage.setItem(\"token\", JSON.stringify(response.data.token))\n            response && localStorage.setItem(\"plants\", JSON.stringify(response.data.others.userPlants))\n            response && localStorage.setItem(\"userId\", JSON.stringify(response.data.others._id))\n            console.log(response.data.others.email)\n            response && setIsLoggedIn(true)\n            await setUserGlobalState({\n                ...userGlobalState,\n                userDetails:response.data.others,\n                token:response.data.token,\n                userId: response.data.others,\n                userPlants:response.data.userPlants,\n\n            })\n            response && setUser(response.data.userPlants)\n            response && window.location.replace(\"/dashboard\")\n        } catch (error) {\n            console.log(error)\n\n        }\n    },\n    CreateNotification: async(notificationInfo, user)=> {\n\n\n        try {\n          const response = await  axios.post('/notification',{\n            userId:user, \n            plantId:notificationInfo.plantId,\n            frequency:notificationInfo.frequency,\n            plantName:notificationInfo.plantName,\n            useEmail:\"jeilani@gmail.com\"\n          })\n          console.log(response)\n            \n        } catch (error) {\n            console.log(error)\n            \n        }\n\n    }\n\n\n\n}\n\nexport default ApiCalls","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/plantbyname.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Alert.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Pagination/Pagination.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/register.js",["126"],"import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\nconst urlEndPoint = process.env.REACT_APP_APIENDPOINT\nconsole.log(urlEndPoint)\n\n\nconst handleUserRegister = async(fields,setMessage ) => {\nconsole.log(fields.name);\n\n\ntry {\n     const response = await axios.post(\"/auth/register\",{\n      name: fields.name,\n      email: fields.email,\n      password: fields.password,\n\n    })\n    const data = await response\n    console.log(data.data)\n    await setMessage(`Successfully created your account. Welcome to Plantiful!`)\n\n\n} catch (error) {\n\n  setMessage(`Sorry, there has been an error. Please try again.`)\n} \n    console.log(`Function triggered`, fields)\n    \n\n  };\n\n  export default handleUserRegister",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":18,"column":22,"nodeType":"133","messageId":"134","endLine":18,"endColumn":31},{"ruleId":"131","severity":1,"message":"135","line":19,"column":8,"nodeType":"133","messageId":"134","endLine":19,"endColumn":11},{"ruleId":"131","severity":1,"message":"136","line":20,"column":10,"nodeType":"133","messageId":"134","endLine":20,"endColumn":21},{"ruleId":"131","severity":1,"message":"137","line":21,"column":8,"nodeType":"133","messageId":"134","endLine":21,"endColumn":16},{"ruleId":"131","severity":1,"message":"138","line":26,"column":11,"nodeType":"133","messageId":"134","endLine":26,"endColumn":26},{"ruleId":"131","severity":1,"message":"139","line":26,"column":27,"nodeType":"133","messageId":"134","endLine":26,"endColumn":40},{"ruleId":"131","severity":1,"message":"140","line":26,"column":42,"nodeType":"133","messageId":"134","endLine":26,"endColumn":48},{"ruleId":"131","severity":1,"message":"141","line":26,"column":50,"nodeType":"133","messageId":"134","endLine":26,"endColumn":59},{"ruleId":"131","severity":1,"message":"142","line":26,"column":61,"nodeType":"133","messageId":"134","endLine":26,"endColumn":79},{"ruleId":"131","severity":1,"message":"143","line":19,"column":10,"nodeType":"133","messageId":"134","endLine":19,"endColumn":17},{"ruleId":"131","severity":1,"message":"144","line":23,"column":17,"nodeType":"133","messageId":"134","endLine":23,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":74,"column":5,"nodeType":"147","messageId":"148","endLine":74,"endColumn":20},{"ruleId":"131","severity":1,"message":"149","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":20},{"ruleId":"131","severity":1,"message":"150","line":62,"column":10,"nodeType":"133","messageId":"134","endLine":62,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":67,"column":3,"nodeType":"153","endLine":67,"endColumn":5,"suggestions":"154"},{"ruleId":"131","severity":1,"message":"155","line":1,"column":38,"nodeType":"133","messageId":"134","endLine":1,"endColumn":48},{"ruleId":"131","severity":1,"message":"156","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":14},{"ruleId":"131","severity":1,"message":"157","line":12,"column":8,"nodeType":"133","messageId":"134","endLine":12,"endColumn":22},{"ruleId":"131","severity":1,"message":"158","line":13,"column":9,"nodeType":"133","messageId":"134","endLine":13,"endColumn":20},{"ruleId":"131","severity":1,"message":"159","line":24,"column":8,"nodeType":"133","messageId":"134","endLine":24,"endColumn":12},{"ruleId":"131","severity":1,"message":"160","line":45,"column":7,"nodeType":"133","messageId":"134","endLine":45,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":1,"column":29,"nodeType":"133","messageId":"134","endLine":1,"endColumn":38},{"ruleId":"131","severity":1,"message":"161","line":14,"column":10,"nodeType":"133","messageId":"134","endLine":14,"endColumn":21},{"ruleId":"131","severity":1,"message":"162","line":16,"column":10,"nodeType":"133","messageId":"134","endLine":16,"endColumn":19},{"ruleId":"131","severity":1,"message":"163","line":22,"column":21,"nodeType":"133","messageId":"134","endLine":22,"endColumn":33},{"ruleId":"131","severity":1,"message":"139","line":27,"column":5,"nodeType":"133","messageId":"134","endLine":27,"endColumn":18},{"ruleId":"131","severity":1,"message":"140","line":28,"column":5,"nodeType":"133","messageId":"134","endLine":28,"endColumn":11},{"ruleId":"131","severity":1,"message":"141","line":29,"column":5,"nodeType":"133","messageId":"134","endLine":29,"endColumn":14},{"ruleId":"131","severity":1,"message":"142","line":30,"column":5,"nodeType":"133","messageId":"134","endLine":30,"endColumn":23},{"ruleId":"131","severity":1,"message":"164","line":43,"column":9,"nodeType":"133","messageId":"134","endLine":43,"endColumn":24},{"ruleId":"131","severity":1,"message":"165","line":1,"column":29,"nodeType":"133","messageId":"134","endLine":1,"endColumn":37},{"ruleId":"131","severity":1,"message":"166","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":2,"column":17,"nodeType":"133","messageId":"134","endLine":2,"endColumn":26},{"ruleId":"131","severity":1,"message":"137","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":16},{"ruleId":"131","severity":1,"message":"159","line":14,"column":8,"nodeType":"133","messageId":"134","endLine":14,"endColumn":12},{"ruleId":"131","severity":1,"message":"167","line":14,"column":14,"nodeType":"133","messageId":"134","endLine":14,"endColumn":21},{"ruleId":"131","severity":1,"message":"168","line":32,"column":15,"nodeType":"133","messageId":"134","endLine":32,"endColumn":19},{"ruleId":"131","severity":1,"message":"169","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":18},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'jwt' is defined but never used.","'DataContext' is defined but never used.","'ApiCalls' is defined but never used.","'userGlobalState' is assigned a value but never used.","'setPlantMatch' is assigned a value but never used.","'plants' is assigned a value but never used.","'setPlants' is assigned a value but never used.","'setUserGlobalState' is assigned a value but never used.","'loading' is assigned a value but never used.","'setToken' is assigned a value but never used.","no-dupe-keys","Duplicate key 'userGlobalState'.","ObjectExpression","unexpected","'registerUSer' is defined but never used.","'latinname' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'useContext' is defined but never used.","'Plus' is defined but never used.","'getPlantByName' is defined but never used.","'DataContext' is assigned a value but never used.","'user' is assigned a value but never used.","'watering' is assigned a value but never used.","'FlowerLotus' is defined but never used.","'useParams' is defined but never used.","'setPlantData' is assigned a value but never used.","'handlePlantInfo' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'setUser' is assigned a value but never used.","'data' is assigned a value but never used.","'Navigate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},"Update the dependencies array to be: [path]",{"range":"175","text":"176"},[1798,1800],"[path]"]