[{"/Users/shabinapatel/Desktop/projects/plantiful/src/index.js":"1","/Users/shabinapatel/Desktop/projects/plantiful/src/App.js":"2","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/UserContext.js":"3","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/DataContext.js":"4","/Users/shabinapatel/Desktop/projects/plantiful/src/components/PlantPage.js":"5","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Navbar.js":"6","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Footer.js":"7","/Users/shabinapatel/Desktop/projects/plantiful/src/components/ErrorPage.js":"8","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/userRegistration.js":"9","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Home.js":"10","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Dashboard.js":"11","/Users/shabinapatel/Desktop/projects/plantiful/src/components/RegisterForm.js":"12","/Users/shabinapatel/Desktop/projects/plantiful/src/components/List/List.js":"13","/Users/shabinapatel/Desktop/projects/plantiful/src/components/LoginForm.js":"14","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/ApiServices.js":"15","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/plantbyname.js":"16","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Alert.js":"17","/Users/shabinapatel/Desktop/projects/plantiful/src/components/Pagination/Pagination.js":"18","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/register.js":"19","/Users/shabinapatel/Desktop/projects/plantiful/src/components/PrivateRoutes.js":"20"},{"size":534,"mtime":1640020547831,"results":"21","hashOfConfig":"22"},{"size":3517,"mtime":1640376068550,"results":"23","hashOfConfig":"22"},{"size":1941,"mtime":1640262907329,"results":"24","hashOfConfig":"22"},{"size":2424,"mtime":1640020758723,"results":"25","hashOfConfig":"22"},{"size":3659,"mtime":1640383832573,"results":"26","hashOfConfig":"22"},{"size":1779,"mtime":1640381325467,"results":"27","hashOfConfig":"22"},{"size":2146,"mtime":1640285155928,"results":"28","hashOfConfig":"22"},{"size":153,"mtime":1640020371469,"results":"29","hashOfConfig":"22"},{"size":1057,"mtime":1639769969438,"results":"30","hashOfConfig":"22"},{"size":4951,"mtime":1640383668558,"results":"31","hashOfConfig":"22"},{"size":5257,"mtime":1640377322833,"results":"32","hashOfConfig":"22"},{"size":3281,"mtime":1640384908322,"results":"33","hashOfConfig":"22"},{"size":4249,"mtime":1640020547810,"results":"34","hashOfConfig":"22"},{"size":2335,"mtime":1640384766277,"results":"35","hashOfConfig":"22"},{"size":3124,"mtime":1640371391455,"results":"36","hashOfConfig":"22"},{"size":285,"mtime":1639238225468,"results":"37","hashOfConfig":"22"},{"size":428,"mtime":1640020547805,"results":"38","hashOfConfig":"22"},{"size":880,"mtime":1638628304158,"results":"39","hashOfConfig":"22"},{"size":719,"mtime":1639511673253,"results":"40","hashOfConfig":"22"},{"size":460,"mtime":1640379933323,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"98p4ih",{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shabinapatel/Desktop/projects/plantiful/src/index.js",[],["88","89"],"/Users/shabinapatel/Desktop/projects/plantiful/src/App.js",["90","91","92","93","94","95","96","97","98"],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/UserContext.js",["99","100"],"import { useState, useEffect, createContext } from \"react\";\nimport ApiServices from \"./ApiServices\";\nexport const UserContext = createContext();\n\nexport const UserContextProvider = (props) => {\n  const initialState = {\n    loginFields: {\n      email: \"\",\n      password: \"\",\n    },\n    alert: {\n      message: \"\",\n      isSuccess: false,\n    },\n  };\n  const [plants, setPlants] = useState()\n  const LocalToken = localStorage.getItem(\"token\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [alert, setAlert] = useState(initialState.alert);\n  const [loginField, setLoginField] = useState(initialState.loginFields);\n  const [token, setToken] = useState(LocalToken);\n  const [userGlobalState, setUserGlobalState] = useState({\n    userDetails:null,\n    token:null,\n    userId: null,\n    userPlants:null\n\n  });\n\n    const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n    setAlert({ message: \"\", isSuccess: false });\n    ApiServices.userLogin(\n      loginField,\n      setUser,\n      setIsLoggedIn,\n      userGlobalState,\n      setUserGlobalState\n    );\n  };\n\n\n\n  const [PlantMatch, setPlantMatch] = useState([])\n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n\n    setLoginField((prev) => ({\n      ...prev,\n      // eslint-disable-next-line no-restricted-globals\n      [event.target.name]: event.target.value,\n    }));\n  };\n  useEffect(()=>{\n    ApiServices.getAllPlants(setPlants)\n},[])\n  const values = {\n    token,\n    isLoggedIn,\n    user,\n    loginField,\n    handleLogin,\n    handleLoginInputChange,\n    alert,\n    setIsLoggedIn,\n    setUser,\n\n    userGlobalState,\n\n    setUserGlobalState,\n    plants,\n    setPlants,\n    PlantMatch,\n    setPlantMatch\n  };\n\n  return (\n    <UserContext.Provider value={values}>\n      {\" \"}\n      {props.children}{\" \"}\n    </UserContext.Provider>\n  );\n};\n","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/DataContext.js",["101","102","103"],"import { useState, useEffect, createContext } from \"react\";\nimport registerUSer from '../dataContext/register'\nimport { useParams } from \"react-router-dom\";\nimport getPlantByName from './plantbyname'\nimport   ApiServices from './ApiServices';\nexport const DataContext = createContext();\n\nexport const DataContextProvider = (props) => {\n    // user registeration\n    const plantiful = \"plantiful\"\n    const [path, setPath] = useState()\n    const [message, setMessage] = useState(false);\n    const initialState = {\n      fields: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      loginFields: {\n        email: \"\",\n        password: \"\",\n      },\n      alert: {\n        message: \"\",\n        isSuccess: false,\n      },\n\n    };\n      const [fields, setFields] = useState(initialState.fields);\n    const somevalue = `15`\n \n    // const [plants, setPlants] = useState()\n    const [plantByName, setPlantByName] = useState([]);\n    const [searchTerm, setSearchTerm] = useState()\n    \n    const handleFieldChange = (event) => {\n      event.preventDefault();\n      setFields((prev) => ({\n        ...prev,\n        [event.target.name]: event.target.value,\n      }));\n    };\n\n\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n         ApiServices.userRegister(fields, setMessage)\n        }\n\n      const handleEnter = (event) => {\n        if (event.key === \"Enter\") {\n          // return handlePlantSearch();\n        }\n      };\n      const handleInputChange = (event) => setSearchTerm(event.target.value);\n \n  // const handlePlantSearch = () => {\n  //   getForecast(searchText, setSelectedDate, setForecasts, setLocation);\n  //   setSearchText(\"\");\n  // };\n const { latinname } = useParams();\n\nuseEffect(()=>{\n\n  getPlantByName(setPlantByName, path)\n},[])\n\n\n      const value = {\n        fields,\n\n        setFields,\n\n        message,\n        setMessage,\n        handleFieldChange,\n        handleSubmit,\n        // plants,\n        // setPlants,\n        plantByName,\n        setPlantByName,\n        searchTerm,\n        setSearchTerm,\n        setPath,\n        handleEnter,\n        getPlantByName,\n        plantiful,\n        handleInputChange,\n        ApiServices,\n        // loginField, \n        // setLoginField,\nsomevalue,\n        alert\n        // handlePlantSearch\n      };\n   \n\n  return (\n    <DataContext.Provider value={value}>{props.children}</DataContext.Provider>\n  );\n};\n","/Users/shabinapatel/Desktop/projects/plantiful/src/components/PlantPage.js",["104","105","106","107","108"],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Navbar.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Footer.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/ErrorPage.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/userRegistration.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Home.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Dashboard.js",["109","110","111","112","113","114","115","116"],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/RegisterForm.js",["117","118"],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/List/List.js",["119","120","121","122"],"import { Plus, Heart, ArrowRight } from \"phosphor-react\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport \"./list.css\";\nimport { UserContext } from \"../../dataContext/UserContext\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../Pagination/Pagination\";\nimport ApiCalls from \"../../dataContext/ApiServices\";\n\nfunction List() {\n  const { plants, PlantMatch, setPlantMatch } =\n    useContext(UserContext);\n  const [search, setSearch] = useState(\"\");\nconst [user, setUser] = useState(\"\")\n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n    setSearch(event.target.value);\n    plantSearch(search);\n  };\n\n  const plantSearch = (search) => {\n    let matchedPlant = plants.filter((plant) => {\n      const regex = new RegExp(`${search}`, \"gi\");\n      return plant.latinName.match(regex) || plant.familyName.match(regex);\n    });\n    setPlantMatch(matchedPlant)\n   \n  };\n\n\n\nconst rendering =  (PlantMatch.length > 0 )? PlantMatch:plants\n\n  return (\n    <>\n      <Container\n        fluid\n        style={{\n          backgroundColor: \"#F9F5F1\",\n        }}\n      >\n        <section className=\"panel\">\n          <header className=\"panel-heading\"> </header>{\" \"}\n          <div className=\"panel-body\">\n            <div className=\"row p-3\">\n              <div className=\"col-12\">\n                <div className=\"input-group \">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search for a plant..\"\n                    className=\"w-50 search_input\"\n                    value={search}\n                    onChange={handleLoginInputChange}\n                  />\n                  <Button\n                    type=\"submit\"\n                    id=\"submit\"\n                    style={{\n                      backgroundColor: \"#55A356\",\n                      border: \"#013606\",\n                      margin: \"8px\",\n                      overflow: \"hidden\",\n                    }}\n                  >\n                    Go! <ArrowRight size={20} />{\" \"}\n                  </Button>{\" \"}\n                </div>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <table className=\"table table-hover p-table\">\n            <thead className=\"p_titles\">\n              <tr>\n                <th> Plant Name </th> <th> Image </th> <th> Origin </th>{\" \"}\n                <th> Watering needs </th> <th> Temperature </th> <th> Like </th>{\" \"}\n                <th> Add </th>{\" \"}\n              </tr>{\" \"}\n            </thead>{\" \"}\n            <tbody>\n              {rendering &&\n                rendering.map((plant, index) => (\n                  <>\n                    <div className=\"user\"> </div>{\" \"}\n                    <tr>\n                      <td className=\"p-name\">\n                        <Link to={`plantname/${plant.latinName}`}>\n                          {\" \"}\n                          {plant.familyName}{\" \"}\n                        </Link>\n\n                        <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <a href=\"plant\"> {plant.familyName} </a> <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <small> {plant.origin} </small>{\" \"}\n                      </td>\n                      <td className=\"p-name\">\n                        <small> {plant.watering} </small>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <span className=\"label label-danger\">\n                          {\" \"}\n                          {plant.temperature} &deg; <sup> c </sup>{\" \"}\n                        </span>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <Heart size={30} weight=\"bold\" className=\"m-4\" />\n                      </td>{\" \"}\n                      <td>\n                        <Plus size={20} weight=\"bold\" />\n                      </td>{\" \"}\n                    </tr>\n                  </>\n                ))}{\" \"}\n            </tbody>{\" \"}\n          </table>{\" \"}\n        </section>{\" \"}\n      </Container>\n\n      <Pagination />\n    </>\n  );\n}\n\nexport default List;\n","/Users/shabinapatel/Desktop/projects/plantiful/src/components/LoginForm.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/ApiServices.js",["123"],"import axios from \"axios\";\n\n\nconst ApiCalls = {\n\n    getAllPlants: async (setPlants) => {\n        // const baseURL = `/`\n\n        let endpoint = '/plants';\n        const response = await axios.get(endpoint)\n        const data = await response.data\n        setPlants(data)\n\n\n    },\n    getPlantByName: async (setPlantByName, latinname) => {\n        let endpoint = `/plants/plantname/${latinname}`\n        const response = await axios.get(endpoint)\n        const data = await response.data[0]\n        setPlantByName(data)\n\n    },\n    searchPlant: async (searchTerm) => {\n\n        let endpoint = '/plant';\n        if (searchTerm) {\n            endpoint = searchTerm + {\n                searchTerm\n            }\n        }\n        const response = await axios.get(endpoint)\n        const data = await response.data\n\n    },\n    userRegister: async (fields, setMessage) => {\n        try {\n            const response = await axios.post(\"/auth/register\", {\n                name: fields.name,\n                email: fields.email,\n                password: fields.password,\n\n            })\n            response.data && window.location.replace(\"/auth/login\");\n\n\n\n            //    const data = await response\n            console.log(response.data)\n            await setMessage(`Form has been submited sucessfully`)\n        } catch (error) {\n\n\n            setMessage(`Failed to submit form`)\n        }\n\n\n    },\n    userLogin: async (loginField, setUser, setIsLoggedIn, userGlobalState,\n        setUserGlobalState) => {\n        try {\n\n            const response = await axios.post('/auth/login', {\n                email: loginField.email,\n                password: loginField.password\n            }, )\n            console.log(response.data.others)\n            response && localStorage.setItem(\"token\", JSON.stringify(response.data.token))\n            response && localStorage.setItem(\"plants\", JSON.stringify(response.data.others.userPlants))\n            response && localStorage.setItem(\"userId\", JSON.stringify(response.data.others._id))\n            console.log(response.data.others.email)\n            response && setIsLoggedIn(true)\n            await setUserGlobalState({\n                ...userGlobalState,\n                userDetails:response.data.others,\n                token:response.data.token,\n                userId: response.data.others,\n                userPlants:response.data.userPlants,\n\n            })\n            response && setUser(response.data.userPlants)\n            response && window.location.replace(\"/dashboard\")\n        } catch (error) {\n            console.log(error)\n\n        }\n    },\n    CreateNotification: async(notificationInfo, user)=> {\n\n\n        try {\n          const response = await  axios.post('/notification',{\n            userId:user, \n            plantId:notificationInfo.plantId,\n            frequency:notificationInfo.frequency,\n            plantName:notificationInfo.plantName,\n            useEmail:\"jeilani@gmail.com\"\n          })\n          console.log(response)\n            \n        } catch (error) {\n            console.log(error)\n            \n        }\n\n    }\n\n\n\n}\n\nexport default ApiCalls","/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/plantbyname.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Alert.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/components/Pagination/Pagination.js",[],"/Users/shabinapatel/Desktop/projects/plantiful/src/dataContext/register.js",["124"],"import axios from 'axios';\nimport { Navigate } from \"react-router-dom\";\nconst urlEndPoint = process.env.REACT_APP_APIENDPOINT\nconsole.log(urlEndPoint)\n\n\nconst handleUserRegister = async(fields,setMessage ) => {\nconsole.log(fields.name);\n\n\ntry {\n     const response = await axios.post(\"/auth/register\",{\n      name: fields.name,\n      email: fields.email,\n      password: fields.password,\n\n    })\n    const data = await response\n    console.log(data.data)\n    await setMessage(`Successfully created your account. Welcome to Plantiful!`)\n\n\n} catch (error) {\n\n  setMessage(`Sorry, there has been an error. Please try again.`)\n} \n    console.log(`Function triggered`, fields)\n    \n\n  };\n\n  export default handleUserRegister","/Users/shabinapatel/Desktop/projects/plantiful/src/components/PrivateRoutes.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":19,"column":22,"nodeType":"131","messageId":"132","endLine":19,"endColumn":31},{"ruleId":"129","severity":1,"message":"133","line":20,"column":8,"nodeType":"131","messageId":"132","endLine":20,"endColumn":11},{"ruleId":"129","severity":1,"message":"134","line":21,"column":10,"nodeType":"131","messageId":"132","endLine":21,"endColumn":21},{"ruleId":"129","severity":1,"message":"135","line":22,"column":8,"nodeType":"131","messageId":"132","endLine":22,"endColumn":16},{"ruleId":"129","severity":1,"message":"136","line":27,"column":3,"nodeType":"131","messageId":"132","endLine":27,"endColumn":18},{"ruleId":"129","severity":1,"message":"137","line":28,"column":3,"nodeType":"131","messageId":"132","endLine":28,"endColumn":16},{"ruleId":"129","severity":1,"message":"138","line":29,"column":3,"nodeType":"131","messageId":"132","endLine":29,"endColumn":9},{"ruleId":"129","severity":1,"message":"139","line":30,"column":3,"nodeType":"131","messageId":"132","endLine":30,"endColumn":12},{"ruleId":"129","severity":1,"message":"140","line":31,"column":3,"nodeType":"131","messageId":"132","endLine":31,"endColumn":21},{"ruleId":"129","severity":1,"message":"141","line":19,"column":10,"nodeType":"131","messageId":"132","endLine":19,"endColumn":17},{"ruleId":"129","severity":1,"message":"142","line":23,"column":17,"nodeType":"131","messageId":"132","endLine":23,"endColumn":25},{"ruleId":"129","severity":1,"message":"143","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":20},{"ruleId":"129","severity":1,"message":"144","line":62,"column":10,"nodeType":"131","messageId":"132","endLine":62,"endColumn":19},{"ruleId":"145","severity":1,"message":"146","line":67,"column":3,"nodeType":"147","endLine":67,"endColumn":5,"suggestions":"148"},{"ruleId":"129","severity":1,"message":"149","line":1,"column":38,"nodeType":"131","messageId":"132","endLine":1,"endColumn":48},{"ruleId":"129","severity":1,"message":"150","line":11,"column":8,"nodeType":"131","messageId":"132","endLine":11,"endColumn":22},{"ruleId":"129","severity":1,"message":"151","line":12,"column":9,"nodeType":"131","messageId":"132","endLine":12,"endColumn":20},{"ruleId":"129","severity":1,"message":"152","line":23,"column":8,"nodeType":"131","messageId":"132","endLine":23,"endColumn":12},{"ruleId":"129","severity":1,"message":"153","line":44,"column":7,"nodeType":"131","messageId":"132","endLine":44,"endColumn":15},{"ruleId":"129","severity":1,"message":"130","line":1,"column":29,"nodeType":"131","messageId":"132","endLine":1,"endColumn":38},{"ruleId":"129","severity":1,"message":"154","line":14,"column":10,"nodeType":"131","messageId":"132","endLine":14,"endColumn":21},{"ruleId":"129","severity":1,"message":"155","line":16,"column":10,"nodeType":"131","messageId":"132","endLine":16,"endColumn":19},{"ruleId":"129","severity":1,"message":"137","line":27,"column":5,"nodeType":"131","messageId":"132","endLine":27,"endColumn":18},{"ruleId":"129","severity":1,"message":"138","line":28,"column":5,"nodeType":"131","messageId":"132","endLine":28,"endColumn":11},{"ruleId":"129","severity":1,"message":"139","line":29,"column":5,"nodeType":"131","messageId":"132","endLine":29,"endColumn":14},{"ruleId":"129","severity":1,"message":"140","line":30,"column":5,"nodeType":"131","messageId":"132","endLine":30,"endColumn":23},{"ruleId":"129","severity":1,"message":"156","line":43,"column":9,"nodeType":"131","messageId":"132","endLine":43,"endColumn":24},{"ruleId":"129","severity":1,"message":"157","line":1,"column":29,"nodeType":"131","messageId":"132","endLine":1,"endColumn":37},{"ruleId":"129","severity":1,"message":"158","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":2,"column":17,"nodeType":"131","messageId":"132","endLine":2,"endColumn":26},{"ruleId":"129","severity":1,"message":"135","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":16},{"ruleId":"129","severity":1,"message":"152","line":14,"column":8,"nodeType":"131","messageId":"132","endLine":14,"endColumn":12},{"ruleId":"129","severity":1,"message":"159","line":14,"column":14,"nodeType":"131","messageId":"132","endLine":14,"endColumn":21},{"ruleId":"129","severity":1,"message":"160","line":32,"column":15,"nodeType":"131","messageId":"132","endLine":32,"endColumn":19},{"ruleId":"129","severity":1,"message":"161","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":18},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'jwt' is defined but never used.","'DataContext' is defined but never used.","'ApiCalls' is defined but never used.","'userGlobalState' is assigned a value but never used.","'setPlantMatch' is assigned a value but never used.","'plants' is assigned a value but never used.","'setPlants' is assigned a value but never used.","'setUserGlobalState' is assigned a value but never used.","'loading' is assigned a value but never used.","'setToken' is assigned a value but never used.","'registerUSer' is defined but never used.","'latinname' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'useContext' is defined but never used.","'getPlantByName' is defined but never used.","'DataContext' is assigned a value but never used.","'user' is assigned a value but never used.","'watering' is assigned a value but never used.","'FlowerLotus' is defined but never used.","'useParams' is defined but never used.","'handlePlantInfo' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'setUser' is assigned a value but never used.","'data' is assigned a value but never used.","'Navigate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Update the dependencies array to be: [path]",{"range":"167","text":"168"},[1798,1800],"[path]"]
