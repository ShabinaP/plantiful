{"ast":null,"code":"var _jsxFileName = \"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/client/src/components/search/Search.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext, useState } from 'react';\nimport { DataContext } from '../../data/context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const {\n    dataSource\n  } = useContext(DataContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataSource.map(forecast => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" description is: \", forecast.description, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" widn is: \", forecast.wind.speed, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" icon is: \", forecast.icon, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" temperature is: \", forecast.temperature.min, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" humidity is: \", forecast.humidity, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const displayDay = forecasts.find(day => day.date === forecast.date);\n          setSelectedDate(displayDay);\n        },\n        children: [\" \", \"More Details\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true))\n  }, void 0, false);\n}\n\n_s(Search, \"WDzlFejbFKaZaTe/aM4a0Yn2/xA=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/client/src/components/search/Search.js"],"names":["React","useContext","useState","DataContext","Search","dataSource","map","forecast","description","wind","speed","icon","temperature","min","humidity","selectedDate","displayDay","forecasts","find","day","date","setSelectedDate"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAAQC,WAAR,QAA2B,gCAA3B;;;AAIA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAE7B,QAAM;AAACC,IAAAA;AAAD,MAAeJ,UAAU,CAACE,WAAD,CAA/B;AACA,sBACI;AAAA,cACGE,UAAU,CAACC,GAAX,CAAgBC,QAAD,iBACd;AAAA,8BACA;AAAA,wCAAsBA,QAAQ,CAACC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAA,iCAAeD,QAAQ,CAACE,IAAT,CAAcC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,iCAAeH,QAAQ,CAACI,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,wCAAsBJ,QAAQ,CAACK,WAAT,CAAqBC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,qCAAmBN,QAAQ,CAACO,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAMGC,YAAY,iBACX;AACE,QAAA,OAAO,EAAE,MAAM;AACb,gBAAMC,UAAU,GAAGC,SAAS,CAACC,IAAV,CAChBC,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAab,QAAQ,CAACa,IADd,CAAnB;AAGAC,UAAAA,eAAe,CAACL,UAAD,CAAf;AACD,SANH;AAAA,mBAQG,GARH;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA,oBADD;AADH,mBADJ;AA0BH;;GA7BuBZ,M;;KAAAA,M","sourcesContent":["import React from 'react'\nimport { useContext, useState } from 'react'\nimport {DataContext } from '../../data/context/DataContext'\n\n\n\nexport default function Search() {\n\n    const {dataSource} = useContext(DataContext)\n    return (\n        <>\n          {dataSource.map((forecast) => (\n            <>\n            <h2> description is: {forecast.description} </h2>\n              <h2> widn is: {forecast.wind.speed} </h2>\n              <h2> icon is: {forecast.icon} </h2>\n              <h2> temperature is: {forecast.temperature.min} </h2>\n              <h2> humidity is: {forecast.humidity} </h2>\n              {selectedDate && (\n                <button\n                  onClick={() => {\n                    const displayDay = forecasts.find(\n                      (day) => day.date === forecast.date\n                    );\n                    setSelectedDate(displayDay);\n                  }}\n                >\n                  {\" \"}\n                  More Details\n                </button>\n              )}\n            </>\n          ))}\n        </>\n      );\n}\n"]},"metadata":{},"sourceType":"module"}